[{"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\index.tsx":"1","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\reportWebVitals.ts":"2","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\App.tsx":"3","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\Init.tsx":"4","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\init.tsx":"5","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\game.tsx":"6","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\cell.tsx":"7","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\index.ts":"8","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\index.ts":"9","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\actions.ts":"10","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\reducer.ts":"11","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\types.ts":"12","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useObjects.ts":"13","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddObject.tsx":"14","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeObject.tsx":"15","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeLogged.tsx":"16","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useLogged.tsx":"17","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\index.ts":"18","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\types.ts":"19","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\actions.ts":"20","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\reducer.ts":"21","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\index.ts":"22","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\reducer.ts":"23","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\actions.ts":"24","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\types.ts":"25","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useUser.tsx":"26","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeUser.tsx":"27","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddUser.tsx":"28","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\main.tsx":"29","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\gameSolo.tsx":"30","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useRemoveObject.tsx":"31","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\rootFinding.tsx":"32","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\promotion.tsx":"33","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\signup.tsx":"34","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\index.tsx":"35","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\reportWebVitals.ts":"36","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\index.ts":"37","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\App.tsx":"38","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\signup.tsx":"39","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\main.tsx":"40","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\gameSolo.tsx":"41","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\game.tsx":"42","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\init.tsx":"43","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\index.ts":"44","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\index.ts":"45","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\index.ts":"46","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useObjects.ts":"47","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\promotion.tsx":"48","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\rootFinding.tsx":"49","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeLogged.tsx":"50","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useAddUser.tsx":"51","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useAddObject.tsx":"52","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeUser.tsx":"53","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useLogged.tsx":"54","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useUser.tsx":"55","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeObject.tsx":"56","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useRemoveObject.tsx":"57","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\actions.ts":"58","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\reducer.ts":"59","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\types.ts":"60","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\types.ts":"61","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\actions.ts":"62","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\reducer.ts":"63","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\reducer.ts":"64","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\types.ts":"65","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\actions.ts":"66","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\Init.tsx":"67"},{"size":704,"mtime":1609759974365,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1608957373882,"results":"70","hashOfConfig":"69"},{"size":806,"mtime":1611212742349,"results":"71","hashOfConfig":"69"},{"size":3177,"mtime":1609594545003,"results":"72","hashOfConfig":"69"},{"size":4218,"mtime":1612257543636,"results":"73","hashOfConfig":"69"},{"size":23481,"mtime":1612265429324,"results":"74","hashOfConfig":"69"},{"size":3337,"mtime":1609660300292,"results":"75","hashOfConfig":"69"},{"size":301,"mtime":1609929103864,"results":"76","hashOfConfig":"69"},{"size":332,"mtime":1609760777760,"results":"77","hashOfConfig":"69"},{"size":916,"mtime":1611201138075,"results":"78","hashOfConfig":"69"},{"size":1127,"mtime":1611201131033,"results":"79","hashOfConfig":"69"},{"size":363,"mtime":1610866476417,"results":"80","hashOfConfig":"69"},{"size":216,"mtime":1609774657191,"results":"81","hashOfConfig":"69"},{"size":346,"mtime":1609774644615,"results":"82","hashOfConfig":"69"},{"size":394,"mtime":1611201151300,"results":"83","hashOfConfig":"69"},{"size":323,"mtime":1609906277896,"results":"84","hashOfConfig":"69"},{"size":212,"mtime":1609904582242,"results":"85","hashOfConfig":"69"},{"size":332,"mtime":1609906416098,"results":"86","hashOfConfig":"69"},{"size":249,"mtime":1609928702864,"results":"87","hashOfConfig":"69"},{"size":315,"mtime":1609906414731,"results":"88","hashOfConfig":"69"},{"size":480,"mtime":1609928709269,"results":"89","hashOfConfig":"69"},{"size":332,"mtime":1610364576113,"results":"90","hashOfConfig":"69"},{"size":780,"mtime":1610812574529,"results":"91","hashOfConfig":"69"},{"size":529,"mtime":1610364571528,"results":"92","hashOfConfig":"69"},{"size":276,"mtime":1610812577581,"results":"93","hashOfConfig":"69"},{"size":204,"mtime":1609929442571,"results":"94","hashOfConfig":"69"},{"size":357,"mtime":1610364526397,"results":"95","hashOfConfig":"69"},{"size":345,"mtime":1610364507359,"results":"96","hashOfConfig":"69"},{"size":7336,"mtime":1611570792746,"results":"97","hashOfConfig":"69"},{"size":16739,"mtime":1612257655718,"results":"98","hashOfConfig":"69"},{"size":298,"mtime":1610622543031,"results":"99","hashOfConfig":"69"},{"size":12775,"mtime":1612195815450,"results":"100","hashOfConfig":"69"},{"size":2531,"mtime":1611238933827,"results":"101","hashOfConfig":"69"},{"size":5743,"mtime":1611238532424,"results":"102","hashOfConfig":"69"},{"size":704,"mtime":1612268342000,"results":"103","hashOfConfig":"104"},{"size":425,"mtime":1612268342000,"results":"105","hashOfConfig":"104"},{"size":288,"mtime":1612268342000,"results":"106","hashOfConfig":"104"},{"size":806,"mtime":1632835282512,"results":"107","hashOfConfig":"104"},{"size":5580,"mtime":1634136440963,"results":"108","hashOfConfig":"104"},{"size":7110,"mtime":1634136431747,"results":"109","hashOfConfig":"104"},{"size":16238,"mtime":1612268342000,"results":"110","hashOfConfig":"104"},{"size":22816,"mtime":1634136381076,"results":"111","hashOfConfig":"104"},{"size":4090,"mtime":1612268342000,"results":"112","hashOfConfig":"113"},{"size":330,"mtime":1612268342000,"results":"114","hashOfConfig":"104"},{"size":330,"mtime":1612268342000,"results":"115","hashOfConfig":"104"},{"size":330,"mtime":1612268342000,"results":"116","hashOfConfig":"104"},{"size":210,"mtime":1612268342000,"results":"117","hashOfConfig":"104"},{"size":2455,"mtime":1612268342000,"results":"118","hashOfConfig":"104"},{"size":12474,"mtime":1634136962040,"results":"119","hashOfConfig":"104"},{"size":316,"mtime":1612268342000,"results":"120","hashOfConfig":"104"},{"size":338,"mtime":1612268342000,"results":"121","hashOfConfig":"104"},{"size":339,"mtime":1612268342000,"results":"122","hashOfConfig":"104"},{"size":350,"mtime":1612268342000,"results":"123","hashOfConfig":"104"},{"size":206,"mtime":1612268342000,"results":"124","hashOfConfig":"104"},{"size":198,"mtime":1612268342000,"results":"125","hashOfConfig":"104"},{"size":387,"mtime":1612268342000,"results":"126","hashOfConfig":"104"},{"size":289,"mtime":1612268342000,"results":"127","hashOfConfig":"104"},{"size":883,"mtime":1612268342000,"results":"128","hashOfConfig":"104"},{"size":1099,"mtime":1612268342000,"results":"129","hashOfConfig":"104"},{"size":347,"mtime":1612268342000,"results":"130","hashOfConfig":"104"},{"size":264,"mtime":1612268342000,"results":"131","hashOfConfig":"104"},{"size":507,"mtime":1612268342000,"results":"132","hashOfConfig":"104"},{"size":760,"mtime":1612268342000,"results":"133","hashOfConfig":"104"},{"size":467,"mtime":1612268342000,"results":"134","hashOfConfig":"104"},{"size":239,"mtime":1612268342000,"results":"135","hashOfConfig":"104"},{"size":301,"mtime":1612268342000,"results":"136","hashOfConfig":"104"},{"size":4095,"mtime":1634136423284,"results":"137","hashOfConfig":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"yc7640",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"140"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"140"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"pt5e7i",{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"216"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"216"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1m4bdrh",{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"216"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"216"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\index.tsx",[],["289","290"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\reportWebVitals.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\App.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\Init.tsx",["291","292","293","294","295"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\init.tsx",["296","297","298","299","300","301","302","303","304"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\game.tsx",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\cell.tsx",["321","322","323","324","325","326","327"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {Button} from 'react-bootstrap';\r\n\r\nimport black_king from '../../images/black_king.png';\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\nimport black_pawn from '../../images/black_pawn.png';\r\n\r\nimport white_king from '../../images/white_king.png';\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\nimport white_pawn from '../../images/white_pawn.png';\r\nimport { isNonNullExpression } from 'typescript';\r\n\r\nconst black = [black_king, black_queen, black_rook, black_knight, black_bishop, black_pawn];\r\nconst white = [white_king, white_queen, white_rook, white_knight, white_bishop, white_pawn];\r\n\r\nconst Cell = ({ key, width, height, x, y }: any) => {\r\n\tconst [object, setObject] = useState({\r\n\t\tname: 'empty',\r\n\t\tx: -1,\r\n\t\ty: -1,\r\n\t\tlived: true,\r\n\t\timage: '',\r\n\t\ttype:'',\r\n\t});\r\n\tuseEffect(() => {\r\n\r\n\t\tif (y === 0) {\r\n\t\t\tif (x === 4) setObject({ name: 'black_king', x: x, y: y, lived: true, image: black_king, type: 'black' });\r\n\t\t\tif (x === 3) setObject({ name: 'black_queen', x: x, y: y, lived: true, image: black_queen, type: 'black' });\r\n\t\t\tif (x === 2 || x === 5) setObject({ name: 'black_bishop', x: x, y: y, lived: true, image: black_bishop, type: 'black' });\r\n\t\t\tif (x === 1 || x === 6) setObject({ name: 'black_knight', x: x, y: y, lived: true, image: black_knight, type: 'black' });\r\n\t\t\tif (x === 0 || x === 7) setObject({ name: 'black_rook', x: x, y: y, lived: true, image: black_rook, type: 'black' });\r\n\t\t}\r\n\t\tif (y === 1) {\r\n\t\t\tsetObject({ name: 'black_pawn', lived: true, x: x, y: y, image: black_pawn, type: 'black' });\r\n\t\t}\r\n\r\n\t\tif (y === 7) {\r\n\t\t\tif (x === 4) setObject({ name: 'white_king', x: x, y: y, lived: true, image: white_king, type: 'white' });\r\n\t\t\tif (x === 3) setObject({ name: 'white_queen', x: x, y: y, lived: true, image: white_queen, type: 'white' });\r\n\t\t\tif (x === 2 || x === 5) setObject({ name: 'white_bishop', x: x, y: y, lived: true, image: white_bishop, type: 'white' });\r\n\t\t\tif (x === 1 || x === 6) setObject({ name: 'white_knight', x: x, y: y, lived: true, image: white_knight, type: 'white' });\r\n\t\t\tif (x === 0 || x === 7) setObject({ name: 'white_rook', x: x, y: y, lived: true, image: white_rook, type: 'white' });\r\n\t\t}\r\n\t\tif (y === 6) {\r\n\t\t\tsetObject({ name: 'white_pawn', lived: true, x: x, y: y, image: white_pawn, type: 'white' });\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{(x + y) % 2 === 0 ? <button style={{ width: width, height: height, backgroundColor: '#996600', border: 0}}>\r\n\t\t\t\t{(x === object.x && y === object.y && object.lived) &&\r\n\t\t\t\t\t<img src={object.image} style={{width: width - 10, height: height - 10 }} />\r\n\t\t\t\t}\r\n\r\n\t\t\t</button> :\r\n\t\t\t\t<button style={{ width: width, height: height, backgroundColor: '#ffcc66', border: 0 }}>\r\n\t\t\t\t\t{(x === object.x && y === object.y && object.lived) &&\r\n\t\t\t\t\t\t<img src={object.image} style={{width: width - 10, height: height - 10 }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cell;\r\n\r\n",["328","329"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useObjects.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\reducer.ts",["330","331"],"import { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\nimport { createReducer } from \"typesafe-actions\";\r\nimport { setConstantValue } from \"typescript\";\r\nimport { ADD_USER, CHANGE_USER } from \"./actions\";\r\nimport { UserAction, UserState } from \"./types\";\r\n\r\n// 초깃값 설정\r\nconst initialState: UserState = [];\r\n\r\nconst user = createReducer<UserState, UserAction>(initialState, {\r\n  [ADD_USER]: (state, { payload }) =>\r\n    state.concat({\r\n      email: payload.email,\r\n      username: payload.username,\r\n      win: payload.win,\r\n      lose: payload.lose,\r\n    }), \r\n  [CHANGE_USER]: (state, { payload }) =>\r\n    state.map(user => true ? ({ email: payload.email, username: payload.username, win: payload.win, lose: payload.lose }) : user),\r\n});\r\nexport default user;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\main.tsx",["332","333","334","335","336","337","338","339","340","341"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useChangeLogged from '../../hooks/useChangeLogged';\r\nimport useLogged from '../../hooks/useLogged';\r\n\r\nimport useChangeUser from '../../hooks/useChangeUser';\r\nimport useAddUser from '../../hooks/useAddUser';\r\nimport useUser from '../../hooks/useUser';\r\nimport { addUser, User } from '../../modules/user';\r\nimport { useCookies } from \"react-cookie\";\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport { Button, Image } from 'react-bootstrap';\r\n\r\nimport refresh_button from '../../images/refresh_button.png';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nconst ENDPOINT = 'localhost:8080';\r\nlet socket: any;\r\n\r\nconst Main = ({ location }: { location: any }) => {\r\n\tconst Logged = useLogged();\r\n\tconst User = useUser();\r\n\tconst addUser = useAddUser();\r\n\tconst changeUser = useChangeUser();\r\n\tconst changeLogged = useChangeLogged();\r\n\tconst [roomList, setroomList] = useState<any[]>([{ id: '', name: '' }]);\r\n\tconst [userList, setUserList] = useState<any[]>([{ id: '', name: '' }]);\r\n\r\n\tconst [request, setRequest] = useState(false);\r\n\tconst [confirm, setConfirm] = useState({ type: 'send', username: null, roomID: null });\r\n\r\n\tlet [cookies] = useCookies([\"access_token\"]);\r\n\tlet history = useHistory();\r\n\r\n\tconst readCookie = async () => {\r\n\t\tif (cookies.access_token) {\r\n\t\t\t// 쿠키에 access_token이 존재하면 로그인 상태 유지\r\n\t\t\tloadUser();\r\n\r\n\t\t} else {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket = io(ENDPOINT);\r\n\r\n\t\treadCookie();\r\n\t}, [])\r\n\r\n\tconst loadUser = async () => {\r\n\t\tawait axios.get(`/api/user/`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (User.length === 0) {\r\n\t\t\t\t\taddUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchangeUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\r\n\t\t\t\t}\r\n\t\t\t\tchangeLogged(true, res.data.user.email);\r\n\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert(error.response.data.message);\r\n\t\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (User.length) {\r\n\t\t\tsocketio();\r\n\t\t}\r\n\r\n\t}, [ENDPOINT, location.search, User]);\r\n\r\n\tconst socketio = () => {\r\n\t\t//socket = io(ENDPOINT);\r\n\r\n\t\tlet name = User[0].username;\r\n\t\tconsole.log('name:', name);\r\n\r\n\t\tsocket.emit('login', name, () => {\r\n\t\t\t//set_socket(!_socket);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.emit('disconnect');\r\n\r\n\t\t\tsocket.off();\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('sendUser', ({ users }: any) => {\r\n\t\t\tsetUserList(users);\r\n\t\t});\r\n\t\tconsole.log('userList:', userList);\r\n\r\n\t}, [userList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('sendRoom', ({ rooms }: any) => {\r\n\t\t\tsetroomList(rooms);\r\n\t\t});\r\n\t\tconsole.log('roomList:', roomList);\r\n\r\n\t}, [roomList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('request', ({ fromUser, confirm, roomID }: any) => {\r\n\t\t\tsetConfirm({ type: confirm, username: fromUser, roomID: roomID });\r\n\t\t});\r\n\t}, [request]);\r\n\r\n\tconst handleRightClick = (name: string) => {\t// 유저에게 match 요청\r\n\r\n\t\tif (name !== User[0].username) {\r\n\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: name, confirm: confirm.type }, () => {\r\n\t\t\t\tloadUser();\r\n\t\t\t\tsetRequest(!request);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (confirm.type === 'receive') {\r\n\t\t\tlet check = window.confirm(confirm.username + '의 요청을 수락하시겠습니까?');\r\n\r\n\t\t\tif (check) {\r\n\t\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: confirm.username, confirm: 'receive' }, () => {\r\n\t\t\t\t\t//setConfirm({type: '', username: null});\r\n\t\t\t\t\tsetRequest(!request);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (confirm.type === 'start') {\r\n\t\t\thistory.push(`/game?roomID=${confirm.roomID}&username=${confirm.username}`);\r\n\t\t}\r\n\t}, [confirm]);\r\n\r\n\tconst soloPlay = () => {\r\n\t\thistory.push('/game/solo');\r\n\t}\r\n\r\n\tconst signOut = async () => {\r\n    await axios\r\n      .post(`/api/auth/logout`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        cookies.access_token = null;\r\n\r\n        alert(\"로그아웃 되었습니다.\");\r\n\t\t\t\t\r\n\t\t\t\thistory.push('/');\r\n\r\n\t\t\t\twindow.location.reload();\r\n      })\r\n      .catch((error) => {\r\n\t\t\t\talert(error.response.data.message);\r\n\t\t\t\thistory.push('/');\r\n\r\n\t\t\t\twindow.location.reload();\r\n      });\r\n  };\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', width: '75%', height: '32rem', float: 'left', border: '2px solid black' }}>\r\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\troomList.length ? roomList.map(room => {\r\n\t\t\t\t\t\t\treturn (<li className=\"list-group-item\">Room {room.id}</li>)\r\n\t\t\t\t\t\t}) : <li className=\"list-group-item\">생성된 방이 없습니다.</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ marginTop: '5%', width: '16%', height: '8rem', float: 'left', borderTop: '2px solid black', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\r\n\t\t\t\t{User.length ? <div>\r\n\t\t\t\t\t<div>{User[0].username}</div>\r\n\t\t\t\t\t<div>Win: {User[0].win}</div>\r\n\t\t\t\t\t<div>Lose: {User[0].lose}</div>\r\n\t\t\t\t</div> : <div></div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<Button style={{backgroundColor: 'white', border: 0, float: 'right', marginRight: '1rem'}}>\r\n\t\t\t\t\t<Image onClick={() => window.location.reload()}src={refresh_button} style={{width:'1.5rem', height: '1.5rem'}}/>\r\n\t\t\t\t</Button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div style={{ width: '16%', height: '24rem', float: 'left', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\r\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList.map(user => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t\t\t\t\t</button>{/*\r\n\t\t\t\t\t\t\t\t\t<ContextMenuTrigger id=\"same_unique_identifier\">\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ height: '1.6rem' }}>{user.name}</div>\r\n\t\t\t\t\t\t\t\t\t</ContextMenuTrigger>\r\n\t\t\t\t\t\t\t\t\t<ContextMenu id=\"same_unique_identifier\" style={{ border: '0.5px solid black' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t대국 신청\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem >\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t정보 보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</ContextMenu> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ marginLeft: '5%', width: '100%' }}>\r\n\t\t\t\t<div style={{ marginRight: '5%', float: 'right', width: '15%' }}>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={soloPlay} style={{width: '5rem', height:'2rem', marginTop: '0.5rem', textAlign: 'center', padding: '0rem'}}>혼자두기</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{float: 'right', width: '15%'}}>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={signOut} style={{width: '5rem', height:'2rem', marginTop: '0.5rem', textAlign: 'center', padding: '0rem'}}>로그아웃</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\gameSolo.tsx",["342","343","344","345","346","347","348","349","350","351","352","353"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useRemoveObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\rootFinding.tsx",["354","355"],"import { Component } from 'react';\r\nconst lodash = require('lodash');\r\n\r\nconst BOARD_SIZE = 8;\r\n\r\nconst rootPawn = (object: any, initPos: number, color: number, grid: any, type: string) => {\r\n\tif (type === 'searchRoot') {\r\n\t\tif (object.y == initPos + 1 * color) {\r\n\t\t\tif (grid[object.y + 2 * color][object.x].object && grid[object.y + 1 * color][object.x].object) {\r\n\t\t\t\tgrid[object.y + 2 * color][object.x].root = true;\r\n\t\t\t\tgrid[object.y + 2 * color][object.x].image = object.image;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isInside(object.y + 1 * color, object.x) && grid[object.y + 1 * color][object.x].object) {\r\n\t\t\tgrid[object.y + 1 * color][object.x].root = true;\r\n\t\t\tgrid[object.y + 1 * color][object.x].image = object.image;\r\n\t\t}\r\n\t}\r\n\tif(type === 'avoidCheck') {\r\n\t\tif (isInside(object.y + 1 * color, object.x + 1)) {\r\n\t\t\tgrid[object.y + 1 * color][object.x + 1].root = true;\r\n\t\t\tgrid[object.y + 1 * color][object.x + 1].image = object.image;\r\n\t\t}\r\n\t\tif (isInside(object.y + 1 * color, object.x - 1)) {\r\n\t\t\tgrid[object.y + 1 * color][object.x - 1].root = true;\r\n\t\t\tgrid[object.y + 1 * color][object.x - 1].image = object.image;\r\n\t\t}\r\n\t}\r\n\tif (isInside(object.y + 1 * color, object.x + 1) && !grid[object.y + 1 * color][object.x + 1].object && grid[object.y + 1 * color][object.x + 1].color === -1 * color) {\r\n\t\tgrid[object.y + 1 * color][object.x + 1].root = true;\r\n\t\tgrid[object.y + 1 * color][object.x + 1].image = object.image;\r\n\t}\r\n\tif (isInside(object.y + 1 * color, object.x - 1) && !grid[object.y + 1 * color][object.x - 1].object && grid[object.y + 1 * color][object.x - 1].color === -1 * color) {\r\n\t\tgrid[object.y + 1 * color][object.x - 1].root = true;\r\n\t\tgrid[object.y + 1 * color][object.x - 1].image = object.image;\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootKnight = (object: any, color: number, grid: any) => {\r\n\tlet dir_first = [[-1, 0], [0, 1], [1, 0], [0, -1]];\r\n\tlet dir_second = [[-1, -1], [-1, 1], [1, 1], [1, -1]];\r\n\r\n\tfor (var i = 0; i < dir_first.length; i++) {\r\n\t\tfor (var cnt: number = 0; cnt < 2; cnt++) {\r\n\t\t\tvar j: number = i + cnt;\r\n\t\t\tif (j === 4) {\r\n\t\t\t\tj -= 4;\r\n\t\t\t}\r\n\t\t\tif (isInside(object.y + dir_first[i][0] + dir_second[j][0], object.x + dir_first[i][1] + dir_second[j][1])) {\r\n\t\t\t\tif (!grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].object) {\r\n\t\t\t\t\tif (grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].color === -1 * color) {\r\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootFromDir = (dir: any, object: any, color: number, grid: any) => {\r\n\tfor (var i = 0; i < dir.length; i++) {\r\n\t\tvar cnt = 1;\r\n\t\twhile (isInside(object.y + dir[i][0] * cnt, object.x + dir[i][1] * cnt)) {\r\n\t\t\t// 기물이 존재하고 같은 색일때,\r\n\t\t\tif (!grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].object) {\r\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === color) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === -1 * color) {\r\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\r\n\t\t\t}\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootKing = (dir: any, object: any, color: number, grid: any) => {\r\n\tfor (var i = 0; i < dir.length; i++) {\r\n\t\tif (isInside(object.y + dir[i][0], object.x + dir[i][1])) {\r\n\t\t\tif (!grid[object.y + dir[i][0]][object.x + dir[i][1]].object) {\r\n\t\t\t\tif (grid[object.y + dir[i][0]][object.x + dir[i][1]].color === -1 * color) {\r\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn grid;\r\n}\r\n\r\nconst checkCastling = async (object: any, Objects: any, grid: any, board: any, castling: any) => {\r\n\tif (object.name === 'rook' && !object.isMoved) {\t// 룩 기준 -> 움직인 적 없이 초기 위치일시\r\n\t\tif (!object.color && object.y === 0 && (object.x === 0 || object.x === 7)) {\t// 블랙\r\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\r\n\t\t\tif (!king.isMoved && king.y === 0 && king.x === 4) {\r\n\t\t\t\tif (object.x === 0) {\r\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 0, 4, -1);\r\n\r\n\t\t\t\t\tif(check) {\r\n\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 2, color: object.color, image: king.image });\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 0, 3, 1);\r\n\r\n\t\t\t\t\tif(check) {\r\n\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 6, color: object.color, image: king.image });\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (object.color && object.y === 7 && (object.x === 0 || object.x === 7)) {\t// 화이트\r\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\r\n\t\t\tif (!king.isMoved && king.y === 7 && king.x === 4) {\r\n\t\t\t\tif (object.x === 0) {\r\n\r\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 7, 4, -1);\r\n\r\n\t\t\t\t\tif(check) {\r\n\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 2, color: object.color, image: king.image });\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 7, 3, 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(check) {\r\n\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 6, color: object.color, image: king.image });\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (object.name === 'king' && !object.isMoved) {\r\n\t\tconst rook: any = Objects.filter((element:any) => element.name === 'rook' && element.color === object.color && !element.isMoved);\r\n\t\tfor (let i = 0; i < rook.length; i++) {\r\n\t\t\tif (rook[i].x === 7) {\r\n\t\t\t\tlet isBlanked = true;\r\n\t\t\t\t\r\n\t\t\t\tisBlanked = await judgeBlankedKing(Objects,board, grid, object, castling, isBlanked, 1);\r\n\r\n\t\t\t\tawait judgeCastling(isBlanked, grid, object, castling, rook[i], 1);\r\n\r\n\t\t\t} else if (rook[i].x === 0) {\r\n\t\t\t\tlet isBlanked = true;\r\n\t\t\t\t\r\n\t\t\t\tisBlanked = await judgeBlankedKing(Objects,board, grid, object, castling, isBlanked, -1);\r\n\r\n\t\t\t\tawait judgeCastling(isBlanked, grid, object, castling, rook[i], -1);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn grid;\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst judgeCastling = (isBlanked:boolean, grid:any, object: any, castling:any, rook:any, bool:number) => {\r\n\tif (isBlanked) {\r\n\t\tgrid[object.y][object.x + 2 * bool].root = true;\r\n\t\tgrid[object.y][object.x + 2 * bool].image = object.image;\r\n\t\tcastling.push({ checked: true, id: rook.id, name: 'rook', row: object.y, col: object.x + 1 * bool, color: object.color, image: rook.image });\r\n\t}\r\n}\r\n\r\nconst judgeBlankedRook = async (Objects:any, object:any, board:any, grid:any, king:any, castling:any, row: number, idx: number, bool:number) => {\r\n\tfor (let i = 1; i < idx; i++) {\r\n\t\tconst temp: any = Objects.find((element:any) => { return element.y === row && element.x === object.x - i * bool });\r\n\t\tif (temp) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tif(!await judgeCheck(Objects, board, grid, object, king.y, king.x + (i - 1) * bool, castling)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nconst judgeBlankedKing = async (Objects:any, board:any, grid:any, object:any, castling:any, isBlanked:boolean, bool:number) => {\r\n\tfor (let j = 1; j < 4; j++) {\r\n\t\tif(!await judgeCheck(Objects, board, grid, object, object.y, object.x + (j - 1) * bool, castling)) {\r\n\t\t\tisBlanked = false;\r\n\t\t\tconsole.log(object.y, object.x + (j - 1) * bool, '123');\r\n\t\t\treturn isBlanked;\r\n\t\t}\r\n\t\t\r\n\t\tconst temp: any = Objects.find((element:any) => { return element.y === object.y && element.x === object.x + j * bool });\r\n\t\tif (temp && temp.name !== 'rook') {\r\n\t\t\tisBlanked = false;\r\n\t\t\treturn isBlanked;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isBlanked;\r\n}\r\n\r\nconst judgeCheck = async (Objects:any, board:any, searchBoard:any, object:any, row:number, col:number, castling: any) => {\r\n\tconst objects: any = Objects.filter((element:any) => object.color === !element.color && element.lived);\r\n\r\n\tlet check = true;\r\n\r\n\tawait objects.map(async (element: any) => {\r\n\t\tlet tBoard: any = await searchRoot(board, element, 'judgeCheck');\r\n\r\n\t\tif(tBoard[row][col].root) {\r\n\t\t\tcheck = false;\r\n\t\t\tif(object.name === 'king') {\r\n\t\t\t\tsearchBoard[object.y][object.x - 2].root = false;\r\n\t\t\t\tsearchBoard[object.y][object.x - 2].image = null;\r\n\t\t\t}\r\n\t\t\tcastling = [];\r\n\t\t}\r\n\t})\r\n\t\r\n\tconsole.log(row, col, check);\r\n\treturn check;\r\n}\r\n\r\n// 앙 파상을 탐색하는 함수\r\nconst rootInPassing = (object: any, searchBoard: any, inPassing: any) => {\r\n\tif (inPassing && inPassing.object && !inPassing.object.isMoved && object.name === 'pawn') {\t// 바로 이전 턴에 움직인, 처음 움직인 폰에 한해서 적용\r\n\t\tif (!inPassing.object.color) {\t//블랙\r\n\r\n\t\t\tif (object.y === inPassing.object.y + 2) {\r\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].image = object.image;\r\n\r\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\r\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].image = object.image;\r\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (object.y === inPassing.object.y - 2) {\r\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].image = object.image;\r\n\r\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\r\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].image = object.image;\r\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn searchBoard;\r\n}\r\n\r\n\r\n\r\nconst searchRoot = async (board:any, object: any, type: any) => {\r\n\tlet searchBoard = lodash.cloneDeep(board);\r\n\r\n\tinit(searchBoard, 'root', false);\r\n\r\n\tlet color: number = 0;\r\n\tlet initPos = 0;\r\n\tlet dir: any;\r\n\r\n\tif (object.color) {\r\n\t\tcolor = -1;\r\n\t\tinitPos = 7;\r\n\t} else {\r\n\t\tinitPos = 0;\r\n\t\tcolor = 1;\r\n\t}\r\n\r\n\tswitch (object.name) {\r\n\t\tcase 'pawn':\r\n\t\t\tsearchBoard = rootPawn(object, initPos, color, searchBoard, type);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'knight':\r\n\t\t\tsearchBoard = rootKnight(object, color, searchBoard);\r\n\t\t\tbreak;\r\n\t\tcase 'rook':\r\n\t\t\tdir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'bishop':\r\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\t\t\tbreak;\r\n\t\tcase 'king':\r\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\r\n\t\t\tsearchBoard = rootKing(dir, object, color, searchBoard);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'queen':\r\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn searchBoard;\r\n}\r\n\r\nconst isInside = (row: number, col: number) => {\r\n\treturn row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE;\r\n}\r\n\r\nconst init = (object: any, attr: any, value: any) => {\r\n\tfor (var i = 0; i < BOARD_SIZE; i++) {\r\n\t\tfor (var j = 0; j < BOARD_SIZE; j++) {\r\n\t\t\tif (object[i][j][attr]) {\r\n\t\t\t\tobject[i][j][attr] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing };","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\promotion.tsx",["356","357"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n\tButton,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\n\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\n\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\n\r\nconst CELL_SIZE = 60;\r\nconst BOARD_SIZE = 8;\r\n\r\nlet blackObjects = [\r\n\t{ image: black_queen, name: 'queen' },\r\n\t{ image: black_rook, name: 'rook' },\r\n\t{ image: black_knight, name: 'knight' },\r\n\t{ image: black_bishop, name: 'bishop' }\r\n];\r\nlet whiteObjects = [\r\n\t{ image: white_queen, name: 'queen' },\r\n\t{ image: white_rook, name: 'rook' },\r\n\t{ image: white_knight, name: 'knight' },\r\n\t{ image: white_bishop, name: 'bishop' }\r\n];\r\n\r\nconst Promotion = (props: any) => {\r\n\r\n\tconst [object, setObject] = useState();\r\n\r\n\tconst selectObject = (object: any) => {\r\n\t\tsetObject(object);\r\n\r\n\t\t//props.selectPromotion(object);\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif(object) {\r\n\t\t\tprops.selectPromotion(object);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.color === 'black' && <div>\r\n\t\t\t\t{blackObjects.map((element: any) => {\r\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\r\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t})}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button onClick={() => onSubmit()} variant=\"dark\" style={{width: '3rem', height:'2rem', marginTop: '1rem', textAlign: 'center', padding: '0rem'}}>승급</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\t\t\t{props.color === 'white' && <div>\r\n\t\t\t\t{whiteObjects.map((element: any) => {\r\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\r\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t})}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button onClick={() => onSubmit()} variant=\"dark\" style={{width: '3rem', height:'2rem', marginTop: '1rem', textAlign: 'center', padding: '0rem'}}>승급</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Promotion;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\signup.tsx",["358","359","360"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { set } from \"js-cookie\";\r\n\r\nconst Signup= () => {\r\n const [email, setEmail] = useState(\"\");\r\n const [username, setUserName] = useState(\"\");\r\n const [password, setPassword] = useState(\"\");\r\n const [password_again, setPasswordAgain] = useState(\"\");\r\n\r\n const [password_error, setPasswordError] = useState<any>();\r\n const [password_match, setPasswordMatch] = useState<any>();\r\n\r\n const Email = (e:any) => {\r\n  setEmail(e.target.value);\r\n}; \r\n\r\nconst UserName = (e:any) => {\r\n  setUserName(e.target.value);\r\n};\r\nconst Password = (e:any) => {\r\n  setPassword(e.target.value);\r\n};\r\nconst PasswordAgain = (e:any) => {\r\n  setPasswordError(e.target.value !== password);\r\n  setPasswordMatch(e.target.value === password);\r\n  setPasswordAgain(e.target.value);\r\n};\r\n\r\nconst submitHandler  = (e:any) => {\r\n  e.preventDefault();\r\n\r\n const signupinfo = {\r\n   email: email,\r\n   username: username,\r\n   password: password,\r\n };\r\nif(password === password_again){\r\n axios\r\n      .post(`/api/auth/register`, signupinfo)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(res.data.message);\r\n        setEmail(\"\");\r\n        setUserName(\"\");\r\n        setPassword(\"\");\r\n        setPasswordAgain(\"\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.message);\r\n      });\r\n    }else if(password !== password_again)\r\n    alert(\"비밀번호가 일치하지 않습니다.\");\r\n};\r\n  return (\r\n    <div style={{ height: \"34rem\" }}>\r\n  <div \r\n    style={{\r\n      backgroundColor: \"#f7feff\",\r\n    }}\r\n  >\r\n    <div style={{ height: \"4rem\" }}> </div>\r\n    <div style={{ height: \"30rem\" }}>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row h-100 justify-content-center align-items-center\">\r\n          <Card border=\"info\" style={{ width: \"50rem\", height: \"30rem\" }}>\r\n            <div className=\"row h-100 justify-content-center align-items-center\">\r\n              <form onSubmit={submitHandler} className=\"col-10\">\r\n                <br/>\r\n                <br/>\r\n                <h2 style={{ fontWeight: \"bolder\" }}>회원가입</h2>\r\n                <hr />\r\n                <Form.Group>\r\n                  <Form inline>\r\n                  <Form.Label style={{ width: \"8rem\" }}>*이메일 주소</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    style={{ width: \"20rem\" }}\r\n                    onChange={Email}\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                  /> </Form>\r\n                </Form.Group>\r\n               \r\n                <Form.Group>\r\n                  <Form inline>\r\n                  <Form.Label style={{ width: \"8rem\" }}>*사용자명</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    style={{ width: \"20rem\" }}\r\n                    onChange={UserName}\r\n                    placeholder=\"사용자명을 입력하세요.\"\r\n                  /></Form>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form inline>\r\n                  <Form.Label style={{ width: \"8rem\" }} >*비밀번호</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    style={{ width: \"20rem\" }}\r\n                    onChange={Password}\r\n                    placeholder=\"비밀번호를 입력하세요.\"\r\n                  /></Form>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                <Form inline>\r\n                  <Form.Label style={{ width: \"8rem\" }}>*비밀번호 확인</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password_again\"\r\n                    value={password_again}\r\n                    style={{ width: \"20rem\" }}\r\n                    onChange={PasswordAgain}\r\n                    placeholder=\"비밀번호를 다시 한번 입력하세요.\"\r\n                  /></Form>\r\n                   <Form.Text className=\"text-muted\">\r\n                    <Form.Label style={{ width: \"10rem\" }}></Form.Label>\r\n                    {password_error && \"비밀번호가 일치하지 않습니다\"}\r\n                    {password_match && \"비밀번호가 일치합니다\"}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n        \r\n                <Form.Text  className=\"text-muted\" >\r\n                  *은 필수항목입니다.\r\n                </Form.Text>\r\n                \r\n                <button\r\n                  type=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-info btn-block\"\r\n\t\t\t\t\t\t\t\t\tstyle={{width:'50%', left: \"0\",\r\n                  right: \"0\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",}}\r\n                  onClick={submitHandler}\r\n                >\r\n                  회원가입\r\n                </button>\r\n                \r\n                <p className=\"forgot-password text-center\">\r\n                  <Link href=\"login\" to='/' style={{ textDecoration: 'none', color:'black' }}>\r\n                    이미 회원이신가요? 로그인\r\n                  </Link>\r\n                </p>\r\n                <br />\r\n                <br />\r\n              </form>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\nexport default Signup;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\index.tsx",[],["361","362"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\reportWebVitals.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\App.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\signup.tsx",["363","364","365"],"import React, { useEffect, useState } from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport axios from \"axios\";\n\nimport { useHistory, Link } from \"react-router-dom\";\nimport { set } from \"js-cookie\";\n\nconst Signup= () => {\n const [email, setEmail] = useState(\"\");\n const [username, setUserName] = useState(\"\");\n const [password, setPassword] = useState(\"\");\n const [password_again, setPasswordAgain] = useState(\"\");\n\n const [password_error, setPasswordError] = useState<any>();\n const [password_match, setPasswordMatch] = useState<any>();\n\n const Email = (e:any) => {\n  setEmail(e.target.value);\n}; \n\nconst UserName = (e:any) => {\n  setUserName(e.target.value);\n};\nconst Password = (e:any) => {\n  setPassword(e.target.value);\n};\nconst PasswordAgain = (e:any) => {\n  setPasswordError(e.target.value !== password);\n  setPasswordMatch(e.target.value === password);\n  setPasswordAgain(e.target.value);\n};\n\nconst submitHandler  = (e:any) => {\n  e.preventDefault();\n\n const signupinfo = {\n   email: email,\n   username: username,\n   password: password,\n };\nif(password === password_again){\n axios\n      .post(`/api/auth/register`, signupinfo)\n      .then((res: any) => {\n        console.log(res.data);\n        alert(res.data.message);\n        setEmail(\"\");\n        setUserName(\"\");\n        setPassword(\"\");\n        setPasswordAgain(\"\");\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n    }else if(password !== password_again)\n    alert(\"비밀번호가 일치하지 않습니다.\");\n};\n  return (\n    <div style={{ height: \"34rem\" }}>\n  <div \n    style={{\n      backgroundColor: \"#f7feff\",\n    }}\n  >\n    <div style={{ height: \"4rem\" }}> </div>\n    <div style={{ height: \"30rem\" }}>\n      <div className=\"container h-100\">\n        <div className=\"row h-100 justify-content-center align-items-center\">\n          <Card border=\"info\" style={{ width: \"50rem\", height: \"30rem\" }}>\n            <div className=\"row h-100 justify-content-center align-items-center\">\n              <form onSubmit={submitHandler} className=\"col-10\">\n                <br/>\n                <br/>\n                <h2 style={{ fontWeight: \"bolder\" }}>회원가입</h2>\n                <hr />\n                <Form.Group>\n                  <Form inline>\n                  <Form.Label style={{ width: \"8rem\" }}>*이메일 주소</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    style={{ width: \"20rem\" }}\n                    onChange={Email}\n                    placeholder=\"이메일을 입력하세요.\"\n                  /> </Form>\n                </Form.Group>\n               \n                <Form.Group>\n                  <Form inline>\n                  <Form.Label style={{ width: \"8rem\" }}>*사용자명</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    value={username}\n                    style={{ width: \"20rem\" }}\n                    onChange={UserName}\n                    placeholder=\"사용자명을 입력하세요.\"\n                  /></Form>\n                </Form.Group>\n\n                <Form.Group>\n                  <Form inline>\n                  <Form.Label style={{ width: \"8rem\" }} >*비밀번호</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    style={{ width: \"20rem\" }}\n                    onChange={Password}\n                    placeholder=\"비밀번호를 입력하세요.\"\n                  /></Form>\n                </Form.Group>\n\n                <Form.Group>\n                <Form inline>\n                  <Form.Label style={{ width: \"8rem\" }}>*비밀번호 확인</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password_again\"\n                    value={password_again}\n                    style={{ width: \"20rem\" }}\n                    onChange={PasswordAgain}\n                    placeholder=\"비밀번호를 다시 한번 입력하세요.\"\n                  /></Form>\n                   <Form.Text className=\"text-muted\">\n                    <Form.Label style={{ width: \"10rem\" }}></Form.Label>\n                    {password_error && \"비밀번호가 일치하지 않습니다\"}\n                    {password_match && \"비밀번호가 일치합니다\"}\n                    </Form.Text>\n                </Form.Group>\n        \n                <Form.Text  className=\"text-muted\" >\n                  *은 필수항목입니다.\n                </Form.Text>\n                \n                <button\n                  type=\"submit\"\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-info btn-block\"\n\t\t\t\t\t\t\t\t\tstyle={{width:'50%', left: \"0\",\n                  right: \"0\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",}}\n                  onClick={submitHandler}\n                >\n                  회원가입\n                </button>\n                \n                <p className=\"forgot-password text-center\">\n                  <Link href=\"login\" to='/' style={{ textDecoration: 'none', color:'black' }}>\n                    이미 회원이신가요? 로그인\n                  </Link>\n                </p>\n                <br />\n                <br />\n              </form>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n  );\n};\nexport default Signup;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\main.tsx",["366","367","368","369","370","371","372","373","374","375"],"import React, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport useChangeLogged from '../../hooks/useChangeLogged';\nimport useLogged from '../../hooks/useLogged';\n\nimport useChangeUser from '../../hooks/useChangeUser';\nimport useAddUser from '../../hooks/useAddUser';\nimport useUser from '../../hooks/useUser';\nimport { addUser, User } from '../../modules/user';\nimport { useCookies } from \"react-cookie\";\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport { Button, Image } from 'react-bootstrap';\n\nimport refresh_button from '../../images/refresh_button.png';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\n\nconst ENDPOINT = 'localhost:8080';\nlet socket: any;\n\nconst Main = ({ location }: { location: any }) => {\n\tconst Logged = useLogged();\n\tconst User = useUser();\n\tconst addUser = useAddUser();\n\tconst changeUser = useChangeUser();\n\tconst changeLogged = useChangeLogged();\n\tconst [roomList, setroomList] = useState<any[]>([{ id: '', name: '' }]);\n\tconst [userList, setUserList] = useState<any[]>([{ id: '', name: '' }]);\n\n\tconst [request, setRequest] = useState(false);\n\tconst [confirm, setConfirm] = useState({ type: 'send', username: null, roomID: null });\n\n\tlet [cookies] = useCookies([\"access_token\"]);\n\tlet history = useHistory();\n\n\tconst readCookie = async () => {\n\t\tif (cookies.access_token) {\n\t\t\t// 쿠키에 access_token이 존재하면 로그인 상태 유지\n\t\t\tloadUser();\n\n\t\t} else {\n\t\t\thistory.push(\"/\");\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsocket = io(ENDPOINT);\n\n\t\treadCookie();\n\t}, [])\n\n\tconst loadUser = async () => {\n\t\tawait axios.get(`/api/user/`)\n\t\t\t.then((res: any) => {\n\t\t\t\tif (User.length === 0) {\n\t\t\t\t\taddUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\n\t\t\t\t} else {\n\t\t\t\t\tchangeUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\n\t\t\t\t}\n\t\t\t\tchangeLogged(true, res.data.user.email);\n\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\talert(error.response.data.message);\n\t\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tif (User.length) {\n\t\t\tsocketio();\n\t\t}\n\n\t}, [ENDPOINT, location.search, User]);\n\n\tconst socketio = () => {\n\t\t//socket = io(ENDPOINT);\n\n\t\tlet name = User[0].username;\n\t\tconsole.log('name:', name);\n\n\t\tsocket.emit('login', name, () => {\n\t\t\t//set_socket(!_socket);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsocket.emit('disconnect');\n\n\t\t\tsocket.off();\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsocket.on('sendUser', ({ users }: any) => {\n\t\t\tsetUserList(users);\n\t\t});\n\t\tconsole.log('userList:', userList);\n\n\t}, [userList]);\n\n\tuseEffect(() => {\n\t\tsocket.on('sendRoom', ({ rooms }: any) => {\n\t\t\tsetroomList(rooms);\n\t\t});\n\t\tconsole.log('roomList:', roomList);\n\n\t}, [roomList]);\n\n\tuseEffect(() => {\n\t\tsocket.on('request', ({ fromUser, confirm, roomID }: any) => {\n\t\t\tsetConfirm({ type: confirm, username: fromUser, roomID: roomID });\n\t\t});\n\t}, [request]);\n\n\tconst handleRightClick = (name: string) => {\t// 유저에게 match 요청\n\n\t\tif (name !== User[0].username) {\n\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: name, confirm: confirm.type }, () => {\n\t\t\t\tloadUser();\n\t\t\t\tsetRequest(!request);\n\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (confirm.type === 'receive') {\n\t\t\tlet check = window.confirm(confirm.username + '의 요청을 수락하시겠습니까?');\n\n\t\t\tif (check) {\n\t\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: confirm.username, confirm: 'receive' }, () => {\n\t\t\t\t\t//setConfirm({type: '', username: null});\n\t\t\t\t\tsetRequest(!request);\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (confirm.type === 'start') {\n\t\t\thistory.push(`/game?roomID=${confirm.roomID}&username=${confirm.username}`);\n\t\t}\n\t}, [confirm]);\n\n\tconst soloPlay = () => {\n\t\thistory.push('/game/solo');\n\t}\n\n\tconst signOut = async () => {\n    await axios\n      .post(`/api/auth/logout`)\n      .then((res) => {\n        console.log(res.data);\n        cookies.access_token = null;\n\n        alert(\"로그아웃 되었습니다.\");\n\t\t\t\t\n\t\t\t\thistory.push('/');\n\n\t\t\t\twindow.location.reload();\n      })\n      .catch((error) => {\n\t\t\t\talert(error.response.data.message);\n\t\t\t\thistory.push('/');\n\n\t\t\t\twindow.location.reload();\n      });\n  };\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', width: '75%', height: '32rem', float: 'left', border: '2px solid black' }}>\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\n\t\t\t\t\t{\n\t\t\t\t\t\troomList.length ? roomList.map(room => {\n\t\t\t\t\t\t\treturn (<li className=\"list-group-item\">Room {room.id}</li>)\n\t\t\t\t\t\t}) : <li className=\"list-group-item\">생성된 방이 없습니다.</li>\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div style={{ marginTop: '5%', width: '16%', height: '8rem', float: 'left', borderTop: '2px solid black', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\n\t\t\t\t{User.length ? <div>\n\t\t\t\t\t<div>{User[0].username}</div>\n\t\t\t\t\t<div>Win: {User[0].win}</div>\n\t\t\t\t\t<div>Lose: {User[0].lose}</div>\n\t\t\t\t</div> : <div></div>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t<Button style={{backgroundColor: 'white', border: 0, float: 'right', marginRight: '1rem'}}>\n\t\t\t\t\t<Image onClick={() => window.location.reload()}src={refresh_button} style={{width:'1.5rem', height: '1.5rem'}}/>\n\t\t\t\t</Button>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div style={{ width: '16%', height: '24rem', float: 'left', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\n\t\t\t\t\t{\n\t\t\t\t\t\tuserList.map(user => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\n\t\t\t\t\t\t\t\t\t\t{user.name}\n\t\t\t\t\t\t\t\t\t</button>{/*\n\t\t\t\t\t\t\t\t\t<ContextMenuTrigger id=\"same_unique_identifier\">\n\t\t\t\t\t\t\t\t\t\t<div style={{ height: '1.6rem' }}>{user.name}</div>\n\t\t\t\t\t\t\t\t\t</ContextMenuTrigger>\n\t\t\t\t\t\t\t\t\t<ContextMenu id=\"same_unique_identifier\" style={{ border: '0.5px solid black' }}>\n\t\t\t\t\t\t\t\t\t\t<MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t대국 신청\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t<MenuItem >\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t정보 보기\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t</ContextMenu> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div style={{ marginLeft: '5%', width: '100%' }}>\n\t\t\t\t<div style={{ marginRight: '5%', float: 'right', width: '15%' }}>\n\t\t\t\t\t<Button variant=\"dark\" onClick={soloPlay} style={{width: '5rem', height:'2rem', marginTop: '0.5rem', textAlign: 'center', padding: '0rem'}}>혼자두기</Button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{float: 'right', width: '15%'}}>\n\t\t\t\t\t<Button variant=\"dark\" onClick={signOut} style={{width: '5rem', height:'2rem', marginTop: '0.5rem', textAlign: 'center', padding: '0rem'}}>로그아웃</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Main;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\gameSolo.tsx",["376","377","378","379","380","381","382","383","384","385","386","387"],"import React, { useEffect, useState } from 'react';\n\nimport {\n\tButton,\n\tImage,\n} from \"react-bootstrap\";\n\nimport lodash from 'lodash';\n\nimport Promotion from './promotion';\n\nimport useObjects from '../../hooks/useObjects';\nimport useAddObject from '../../hooks/useAddObject';\nimport useChangeObject from '../../hooks/useChangeObject';\n\nimport black_king from '../../images/black_king.png';\nimport black_queen from '../../images/black_queen.png';\nimport black_rook from '../../images/black_rook.png';\nimport black_knight from '../../images/black_knight.png';\nimport black_bishop from '../../images/black_bishop.png';\nimport black_pawn from '../../images/black_pawn.png';\n\nimport white_king from '../../images/white_king.png';\nimport white_queen from '../../images/white_queen.png';\nimport white_rook from '../../images/white_rook.png';\nimport white_knight from '../../images/white_knight.png';\nimport white_bishop from '../../images/white_bishop.png';\nimport white_pawn from '../../images/white_pawn.png';\nimport { useHistory } from 'react-router-dom';\nimport useUser from '../../hooks/useUser';\n\nimport useRemoveObject from '../../hooks/useRemoveObject';\nconst { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing } = require('./rootFinding');\n\nconst CELL_SIZE = 60;\nconst BOARD_SIZE = 8;\nconst boardWidth = CELL_SIZE * BOARD_SIZE;\n\nlet socket: any;\n\nlet grid = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n\t\treturn { click: 0, object: true, root: false, color: 0, image: '', status: '' }\n\t});\n});\n\nfor (var i = 0; i < BOARD_SIZE; i++) {\n\tgrid[0][i].object = false;\n\tgrid[1][i].object = false;\n\tgrid[6][i].object = false;\n\tgrid[7][i].object = false;\n\n\tgrid[0][i].color = 1;\n\tgrid[1][i].color = 1;\n\tgrid[6][i].color = -1;\n\tgrid[7][i].color = -1;\n}\n\nlet castling: any = [];\nlet inPassing: any = null;\n\nconst GameSolo = () => {\n\n\tconst removeObject = useRemoveObject();\n\tconst Objects = useObjects();\n\tconst addObject = useAddObject();\n\tconst changeObject = useChangeObject();\n\tconst [board, setBoard] = useState(grid);\n\tconst [turn, setTurn] = useState(1);\n\tconst [clicked, setClicked] = useState({ row: -1, col: -1 });\n\tconst [promotionColor, setPromotionColor] = useState('');\n\n\tlet history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (Objects.length < 32) {\n\t\t\taddObject('king', 4, 0, black_king, false);\n\t\t\taddObject('queen', 3, 0, black_queen, false);\n\t\t\taddObject('rook', 0, 0, black_rook, false);\n\t\t\taddObject('rook', 7, 0, black_rook, false);\n\t\t\taddObject('knight', 1, 0, black_knight, false);\n\t\t\taddObject('knight', 6, 0, black_knight, false);\n\t\t\taddObject('bishop', 2, 0, black_bishop, false);\n\t\t\taddObject('bishop', 5, 0, black_bishop, false);\n\n\t\t\taddObject('king', 4, 7, white_king, true);\n\t\t\taddObject('queen', 3, 7, white_queen, true);\n\t\t\taddObject('rook', 0, 7, white_rook, true);\n\t\t\taddObject('rook', 7, 7, white_rook, true);\n\n\n\t\t\taddObject('knight', 1, 7, white_knight, true);\n\t\t\taddObject('knight', 6, 7, white_knight, true);\n\t\t\taddObject('bishop', 2, 7, white_bishop, true);\n\t\t\taddObject('bishop', 5, 7, white_bishop, true);\n\n\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\taddObject('pawn', i, 1, black_pawn, false);\n\t\t\t\taddObject('pawn', i, 6, white_pawn, true);\n\t\t\t}\n\t\t}\n\t\tconsole.log('reload');\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (turn > 1) {\n\t\t\tjudgeCheck();\n\t\t\tjudgePromotion();\n\t\t}\n\t}, [turn])\n\n\tconst clickControl = (rowIdx: number, colIdx: number) => {\n\t\tconsole.log(rowIdx, colIdx);\n\t\tlet grid = board;\n\t\n\t\tinit(grid, 'click', 0);\n\t\tinit(grid, 'image', '');\n\n\t\tif (grid[rowIdx][colIdx].root) { // 이동 가능한 루트를 클릭했을 시\n\t\t\tconst object: any = Objects.find((element) => { return element.y === clicked.row && element.x === clicked.col && element.lived });  // 선택했던 기물\n\n\t\t\t// 기물의 위치를 해당 위치로 수정\n\t\t\tconst destObject: any = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });  // 목적지의 기물\n\t\t\tlet objectName = '';\n\n\t\t\tif (destObject) {\n\t\t\t\tobjectName = destObject.name;\n\t\t\t\tchangeObject(destObject.id, colIdx, rowIdx, false, true, destObject.image, destObject.name);\n\t\t\t}\n\n\t\t\tif (grid[clicked.row][colIdx].status === 'inPassing') {\n\t\t\t\tconst inPassingObject: any = Objects.find((element) => { return element.y === clicked.row && element.x === inPassing.object.x && element.lived });  // 인파상으로 제거되는 기물\n\n\t\t\t\tif (inPassingObject) {\n\t\t\t\t\tconsole.log('pass:', inPassingObject);\n\t\t\t\t\tchangeObject(inPassingObject.id, null, null, false, true, inPassingObject.image, inPassingObject.name);\n\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].object = true;\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].root = false;\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].image = '';\n\n\t\t\t\t\tgrid[clicked.row][colIdx].status = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchangeObject(object.id, colIdx, rowIdx, true, true, object.image, object.name);\n\n\t\t\tif (object.name === 'pawn') {\n\t\t\t\tinPassing = { turn: turn, object: object };\n\t\t\t} else {\n\t\t\t\tinPassing = { turn: turn, object: null };\n\t\t\t}\n\n\t\t\tif((object.name === 'rook' && ((rowIdx === 0 && colIdx === 5) || (rowIdx === 0 && colIdx === 3) || (rowIdx === 7 && colIdx === 3) || (rowIdx === 7 && colIdx === 5))) ||\n\t\t\t\t(object.name === 'king' && ((rowIdx === 0 && colIdx === 6) || (rowIdx === 0 && colIdx === 2) || (rowIdx === 7 && colIdx === 6) || (rowIdx === 7 && colIdx === 2)))) {\n\t\t\t\t\tif (castling.length) {\n\t\t\t\t\t\tlet check: boolean = true;\n\t\t\t\t\t\tif (castling[0].name === 'king') {\n\t\t\t\t\t\t\tcheck = window.confirm('캐슬링 하시겠습니까?');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tif (check) {\n\t\t\t\t\t\t\tfor (let i = 0; i < castling.length; i++) {\n\t\t\t\t\t\t\t\tif (castling[i].checked) {\n\t\t\t\t\t\t\t\t\tif (castling[i].color === false) {\n\t\t\t\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].color = 1;\n\t\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].color = -1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].object = false;\n\t\t\n\t\t\t\t\t\t\t\t\tconst tempObject: any = Objects.find((element) => { return element.id === castling[i].id });  // 캐슬링 대상의 기물\n\t\t\n\t\t\t\t\t\t\t\t\tconsole.log('log:', castling[i]);\n\t\t\n\t\t\t\t\t\t\t\t\tgrid[tempObject.y][tempObject.x].color = 0;\n\t\t\t\t\t\t\t\t\tgrid[tempObject.y][tempObject.x].object = true;\n\n\n\t\t\n\t\t\t\t\t\t\t\t\tchangeObject(castling[i].id, castling[i].col, castling[i].row, true, true, castling[i].image, castling[i].name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgrid[clicked.row][clicked.col].object = true;\n\t\t\tgrid[clicked.row][clicked.col].color = 0;\n\t\t\tgrid[rowIdx][colIdx].object = false;\n\n\t\t\tif (!object.color) {\n\t\t\t\tgrid[rowIdx][colIdx].color = 1;\n\t\t\t} else {\n\t\t\t\tgrid[rowIdx][colIdx].color = -1;\n\t\t\t}\n\n\t\t\tif (objectName === 'king') {\n\t\t\t\talert('game set');\n\t\t\t}\n\n\t\t\tsetTurn(turn + 1);\n\n\t\t\tinit(grid, 'root', false);\n\n\t\t\tcastling = [];\n\t\t} else {\n\t\t\tgrid[rowIdx][colIdx].click++;\n\n\t\t\t//setBoard([...grid]);\n\n\t\t\tconst object = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });\n\n\t\t\t//console.log(object);\n\n\t\t\tcastling = [];\n\t\t\tsetClicked({ row: rowIdx, col: colIdx });\n\n\t\t\t//let searchBoard: any = searchRoot(board, object, 'searchRoot');\n\t\t\tsearchRoot(board, object, 'searchRoot');\n\t\t}\n\t}\n\n\tconst init = (object: any, attr: any, value: any) => {\n\t\tfor (var i = 0; i < BOARD_SIZE; i++) {\n\t\t\tfor (var j = 0; j < BOARD_SIZE; j++) {\n\t\t\t\tif (object[i][j][attr]) {\n\t\t\t\t\tobject[i][j][attr] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst judgePromotion = () => {\n\t\tconst object = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\n\t\tif (object) {\n\t\t\tif (!object.color) {\n\t\t\t\talert('흑 승급');\n\t\t\t\tsetPromotionColor('black');\n\t\t\t} else {\n\t\t\t\talert('백 승급');\n\t\t\t\tsetPromotionColor('white');\n\t\t\t}\n\t\t}\n\t}\n\n\tconst searchRoot = async (board:any, object: any, type: any) => {\n\t\tlet searchBoard = lodash.cloneDeep(board);\n\n\t\tinit(searchBoard, 'root', false);\n\n\t\tlet color: number = 0;\n\t\tlet initPos = 0;\n\t\tlet dir: any;\n\n\t\tif (object.color) {\n\t\t\tcolor = -1;\n\t\t\tinitPos = 7;\n\t\t} else {\n\t\t\tinitPos = 0;\n\t\t\tcolor = 1;\n\t\t}\n\n\t\tswitch (object.name) {\n\t\t\tcase 'pawn':\n\t\t\t\tsearchBoard = rootPawn(object, initPos, color, searchBoard, type);\n\n\t\t\t\tif (type === 'searchRoot')\n\t\t\t\t\tsearchBoard = rootInPassing(object, searchBoard, inPassing);\n\t\t\t\t// 앙파상, 승진 구현\n\t\t\t\tbreak;\n\t\t\tcase 'knight':\n\t\t\t\tsearchBoard = rootKnight(object, color, searchBoard);\n\t\t\t\tbreak;\n\t\t\tcase 'rook':\n\t\t\t\tdir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\n\t\t\t\tif(type === 'searchRoot')\n\t\t\t\t\tsearchBoard = await checkCastling(object, Objects, searchBoard, board, castling);\n\t\t\t\tbreak;\n\t\t\tcase 'bishop':\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\t\t\t\tbreak;\n\t\t\tcase 'king':\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n\n\t\t\t\tsearchBoard = rootKing(dir, object, color, searchBoard);\n\n\t\t\t\tif(type === 'searchRoot')\n\t\t\t\t\tsearchBoard = await checkCastling(object, Objects, searchBoard, board, castling);\n\n\t\t\t\tif(type === 'searchRoot')\n\t\t\t\t\tsearchBoard = await avoidCheck(object, searchBoard);\n\n\t\t\t\tbreak;\n\t\t\tcase 'queen':\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (type === 'searchRoot') {\n\t\t\tsetBoard([...searchBoard]);\n\t\t\treturn null;\n\t\t} else if (type !== 'searchRoot') {\n\t\t\treturn searchBoard;\n\t\t}\n\t}\n\n\tconst avoidCheck = async (object: any, searchBoard: any) => {\n\t\tconst objects: any = Objects.filter(element => object.color === !element.color && element.lived);\n\n\t\tawait objects.map(async (element: any) => {\n\t\t\tlet tBoard: any = await searchRoot(board, element, 'avoidCheck');\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tfor (let j = 0; j < 8; j++) {\n\t\t\t\t\tif (tBoard[i][j].root && searchBoard[i][j].root) {\n\t\t\t\t\t\tsearchBoard[i][j].root = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\treturn searchBoard;\n\t}\n\n\t// 본인의 턴에 체크 상태인지 확인하는 함수\n\tconst judgeCheck = async () => {\n\t\tlet checkBoard = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n\t\t\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n\t\t\t\treturn { root: false }\n\t\t\t});\n\t\t});\n\n\t\tconst king: any = Objects.find((element) => { return element.name === 'king' && turn % 2 === 1 ? element.color === false : element.color === true });\n\n\t\tconst objects: any = Objects.filter(element => turn % 2 === 1 ? element.color === true && element.lived : element.color === false && element.lived);\n\n\t\tawait objects.map(async (element: any) => {\n\t\t\tlet tBoard: any = await searchRoot(board, element, 'judgeCheck');\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tfor (let j = 0; j < 8; j++) {\n\t\t\t\t\tif (tBoard[i][j].root) {\n\t\t\t\t\t\tcheckBoard[i][j].root = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif (checkBoard[king.y][king.x].root) {\n\t\t\talert('check!');\n\t\t}\n\t}\n\n\tconst checkDisabled = (rowIdx: number, colIdx: number) => {\n\t\tif (board[rowIdx][colIdx].object) {\n\t\t\tif (board[rowIdx][colIdx].root) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (board[rowIdx][colIdx].root) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((board[rowIdx][colIdx].color === 1 && (turn % 2) === 1) || (board[rowIdx][colIdx].color === -1 && (turn % 2) === 0)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst checkColor = (color: string, rowIdx: number, colIdx: number) => {\n\t\tif (board[rowIdx][colIdx].root) {\n\t\t\treturn '#cccccc';\n\t\t} else {\n\t\t\treturn color;\n\t\t}\n\t}\n\n\tconst backToHome = () => {\n\t\tObjects.map(object => {\n\t\t\tremoveObject(object.id);\n\t\t})\n\n\t\thistory.push('/home');\n\t\twindow.location.reload();\n\t}\n\n\tconst selectPromotion = (object: any): void => {\n\t\tconst pawn: any = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\n\t\t\n\t\tchangeObject(pawn.id, pawn.x, pawn.y, true, true, object.image, object.name);\n\n\t\tsetPromotionColor('');\n\t}\n\n\tconst selectImage = (object: any, rowIdx: number, colIdx: number) => {\n\t\tif (object) {\n\t\t\treturn object.image;\n\t\t} else {\n\t\t\treturn board[rowIdx][colIdx].image;\n\t\t}\n\t}\n\n\tconst renderBoard = () => {\n\t\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, rowIdx) => {\n\t\t\tlet cellList = Array.apply(null, Array(BOARD_SIZE)).map((el, colIdx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{(rowIdx + colIdx) % 2 === 0 ? <button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#ffcc66', rowIdx, colIdx), border: '1px solid black' }}>\n\t\t\t\t\t\t\t{Objects.map(object => { // 오브젝트 32개 탐색\n\t\t\t\t\t\t\t\tif (object.x === colIdx && object.y === rowIdx && object.lived) {\n\t\t\t\t\t\t\t\t\treturn <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{checkColor('#ffcc66', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\n\t\t\t\t\t\t\t\t<Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\n\t\t\t\t\t\t</button> :\n\t\t\t\t\t\t\t<button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#996600', rowIdx, colIdx), border: '1px solid black' }}>\n\t\t\t\t\t\t\t\t{Objects.map(object => { // 오브젝트 32개 탐색\n\t\t\t\t\t\t\t\t\tif (object.x === colIdx && object.y === rowIdx && object.lived) {\n\t\t\t\t\t\t\t\t\t\treturn <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t{checkColor('#996600', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\n\t\t\t\t\t\t\t\t\t<Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tkey={rowIdx}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: boardWidth,\n\t\t\t\t\t\theight: CELL_SIZE,\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'flex-start'\n\t\t\t\t\t}}>\n\t\t\t\t\t{cellList}\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', float: 'left' }}>\n\t\t\t\t{renderBoard()}\n\t\t\t</div>\n\t\t\t<div style={{ marginLeft: '3%', marginTop: '5%', float: 'left', width: '35%', textAlign: 'center' }}>\n\t\t\t\t<div style={{ height: '5rem' }}>\n\t\t\t\t\t{turn % 2 === 1 ? <div style={{ fontSize: '1.5rem' }}>BLACK TURN {turn}</div> : <div style={{ fontSize: '1.5rem' }}>WHITE TURN {turn}</div>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row h-100 justify-content-center align-items-center\">\n          <div style={{margin: '3%', width: '8rem'}}>\n            <div style={{ textAlign: 'center', fontSize: '1.2rem', fontStyle: 'italic' }}>\n              Black Dead\n            </div>\n\t\t\t\t\t\t<br/>\n            <div style={{ textAlign: 'left', height: '5rem', width: '8rem' }}>\n              {Objects.map(object => {\n                if (!object.lived && !object.color) {\n                  return <img src={object.image} style={{ width: '1.5rem', height: '30px', paddingRight: '0.2rem' }} />\n                }\n              })}\n            </div>\n          </div>\n          <div style={{margin: '1rem', width: '8rem'}}>\n            <div style={{ textAlign: 'center', fontSize: '1.2rem', fontStyle: 'italic'}}>\n              White Dead\n            </div>\n\t\t\t\t\t\t<br/>\n            <div style={{ textAlign: 'left', height: '5rem', width: '8rem'}}>\n              {Objects.map(object => {\n                if (!object.lived && object.color) {\n                  return <img src={object.image} style={{ width: '1.5rem', height: '30px', paddingRight: '0.2rem' }} />\n                }\n              })}\n            </div>\n          </div>\n        </div>\n\t\t\t\t<div style={{ height: '10rem' }}>\n\t\t\t\t\t<Promotion color={promotionColor} selectPromotion={selectPromotion}/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"dark\" onClick={backToHome}>뒤로 가기</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GameSolo;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\game.tsx",["388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403"],"import React, { useEffect, useState, useCallback } from 'react';\n\nimport axios from 'axios';\nimport Cell from './cell';\n\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\n\nimport {\n  Button,\n  Image\n} from \"react-bootstrap\";\n\nimport lodash from 'lodash';\n\nimport useObjects from '../../hooks/useObjects';\nimport useAddObject from '../../hooks/useAddObject';\nimport useChangeObject from '../../hooks/useChangeObject';\n\nimport black_king from '../../images/black_king.png';\nimport black_queen from '../../images/black_queen.png';\nimport black_rook from '../../images/black_rook.png';\nimport black_knight from '../../images/black_knight.png';\nimport black_bishop from '../../images/black_bishop.png';\nimport black_pawn from '../../images/black_pawn.png';\n\nimport white_king from '../../images/white_king.png';\nimport white_queen from '../../images/white_queen.png';\nimport white_rook from '../../images/white_rook.png';\nimport white_knight from '../../images/white_knight.png';\nimport white_bishop from '../../images/white_bishop.png';\nimport white_pawn from '../../images/white_pawn.png';\nimport { useHistory } from 'react-router-dom';\nimport useUser from '../../hooks/useUser';\nimport useRemoveObject from '../../hooks/useRemoveObject';\nimport useAddUser from '../../hooks/useAddUser';\nimport { isNotEmittedStatement } from 'typescript';\n\nimport Promotion from './promotion';\nconst { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing } = require('./rootFinding');\n\nconst CELL_SIZE = 60;\nconst BOARD_SIZE = 8;\nconst boardWidth = CELL_SIZE * BOARD_SIZE;\n\nlet socket: any;\n\nlet grid = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n  return Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n    return { click: 0, object: true, root: false, color: 0, image: '', status: '' }\n  });\n});\n\nfor (var i = 0; i < BOARD_SIZE; i++) {\n  grid[0][i].object = false;\n  grid[1][i].object = false;\n  grid[6][i].object = false;\n  grid[7][i].object = false;\n\n  grid[0][i].color = 1;\n  grid[1][i].color = 1;\n  grid[6][i].color = -1;\n  grid[7][i].color = -1;\n}\n\nlet castling: any = [];\nlet inPassing: any = null;\n\nconst Game = ({ location }: { location: any }) => {\n  const User = useUser();\n  const Objects = useObjects();\n  const addObject = useAddObject();\n  const changeObject = useChangeObject();\n  const removeObject = useRemoveObject();\n  const addUser = useAddUser();\n\n  const [board, setBoard] = useState(grid);\n  const [turn, setTurn] = useState(1);\n  const [clicked, setClicked] = useState({ row: -1, col: -1 });\n  const [roomID, setRoomID] = useState('');\n  const [username, setUsername] = useState('');\n  const [move, setMove] = useState(false);\n\n  const [connected, setConnected] = useState(false);\n  const [take, setTake] = useState(false);\n  const [type, setType] = useState('');\n\n  const [promotionColor, setPromotionColor] = useState('');\n  const [promotionMessage, setPromotionMessage] = useState('');\n\n  let history = useHistory();\n\n  const ENDPOINT = 'localhost:8080';\n\n  useEffect(() => {\n    if (Objects.length < 32) {\n      addObject('king', 4, 0, black_king, false);\n      addObject('queen', 3, 0, black_queen, false);\n      addObject('rook', 0, 0, black_rook, false);\n      addObject('rook', 7, 0, black_rook, false);\n      addObject('knight', 1, 0, black_knight, false);\n      addObject('knight', 6, 0, black_knight, false);\n      addObject('bishop', 2, 0, black_bishop, false);\n      addObject('bishop', 5, 0, black_bishop, false);\n\n      addObject('king', 4, 7, white_king, true);\n      addObject('queen', 3, 7, white_queen, true);\n      addObject('rook', 0, 7, white_rook, true);\n      addObject('rook', 7, 7, white_rook, true);\n      addObject('knight', 1, 7, white_knight, true);\n      addObject('knight', 6, 7, white_knight, true);\n      addObject('bishop', 2, 7, white_bishop, true);\n      addObject('bishop', 5, 7, white_bishop, true);\n\n      for (var i = 0; i < 8; i++) {\n        addObject('pawn', i, 1, black_pawn, false);\n        addObject('pawn', i, 6, white_pawn, true);\n      }\n    }\n    console.log('reload');\n\n    const { roomID, username } = queryString.parse(location.search);\n\n    if (typeof (roomID) === 'string' && typeof (username) === 'string') {\n      setRoomID(roomID);\n      setUsername(username);\n    }\n\n    socket = io(ENDPOINT);\n\n    socket.emit('roomConnect', { roomID: roomID, username: User[0].username }, () => {\n      setConnected(!connected);\n    });\n\n    return () => {\n      socket.emit('removeRoom', { roomID: roomID });\n      socket.off();\n    }\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    if (turn > 1) {\n      judgeGame();\n      judgeCheck();\n      judgePromotion();\n    }\n  }, [turn]);\n\n  useEffect(() => {\n    socket.on('match', ({ roomID }: any) => {\n      setRoomID(roomID);\n      socket.emit('selectColor', { roomID: roomID }, () => {\n        setTake(!take);\n      })\n    });\n  }, [connected]);\n\n  useEffect(() => {\n    socket.on('setColor', ({ black, white, roomID }: any) => {\n      setRoomID(roomID);\n\n      axios.get(`/api/user/`)\n        .then((res: any) => {\n          if (black === res.data.user.username) {\n            setType('black');\n            setTurn(1);\n          } else if (white === res.data.user.username) {\n            setType('white');\n            setTurn(1);\n          }\n          //setUsername(res.data.user.username);\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    })\n  }, [take]);\n\n  // 상대방의 움직임 반영\n  useEffect(() => {\n    socket.on('breakOut', ({ roomID }: any) => {\n      alert('상대방이 기권하여 승리하였습니다.');\n      setPromotionColor('gameSet');\n    })\n    socket.on('loadMove', ({ roomID, username, data, turn }: any) => {\n\n      if (data.grid) {\n        grid = data.grid;\n        setBoard([...grid]);\n      } else if (data.board) {\n        grid = data.board;\n        setBoard([...grid]);\n      }\n\n      // 상대방의 움직임에 따른 보드 변화\n      if (data.inPassing) {\n        console.log('inPassing:', data.inPassing);\n\n        inPassing = data.inPassing;\n      }\n\n      setPromotionColor('');\n      setPromotionMessage('');\n\n      for (let i = 0; i < data.object.length; i++) {\n        changeObject(data.object[i].id, data.object[i].row, data.object[i].col, data.object[i].lived, data.object[i].isMoved, data.object[i].image, data.object[i].name);\n      }\n\n      if (data.grid) {\n        setTurn(turn);\n      } else if (data.board) {\n        setTurn(turn - 1);\n      }\n    });\n  }, [move]);\n\n  const clickControl = (rowIdx: number, colIdx: number) => {\n    let grid = board;\n\n    init(grid, 'click', 0);\n\n    if (grid[rowIdx][colIdx].root) { // 이동 가능한 루트를 클릭했을 시\n      const object: any = Objects.find((element) => { return element.y === clicked.row && element.x === clicked.col && element.lived });  // 선택했던 기물\n\n      // 기물의 위치를 해당 위치로 수정\n      const destObject: any = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });  // 목적지의 기물\n      let objectName = '';\n\n      let objectChange = [];\n\n      if (destObject) {\n        objectName = destObject.name;\n        changeObject(destObject.id, colIdx, rowIdx, false, true, destObject.image, destObject.name);\n        objectChange.push({ id: destObject.id, row: colIdx, col: rowIdx, lived: false, isMoved: true, object: objectName, image: destObject.image, name: destObject.name });\n      }\n\n      if (grid[clicked.row][colIdx].status === 'inPassing') {\n        const inPassingObject: any = Objects.find((element) => { return element.y === clicked.row && element.x === inPassing.object.x && element.lived });  // 인파상으로 제거되는 기물\n\n        if (inPassingObject) {\n          changeObject(inPassingObject.id, null, null, false, true, inPassingObject.image, inPassingObject.name);\n          objectChange.push({ id: inPassingObject.id, row: null, col: null, lived: false, isMoved: true, object: inPassingObject.name, image: inPassingObject.image, name: inPassingObject.name });\n\n          grid[clicked.row][inPassing.object.x].object = true;\n          grid[clicked.row][inPassing.object.x].root = false;\n          grid[clicked.row][inPassing.object.x].image = '';\n\n          //grid[clicked.row][colIdx].status = '';\n          init(grid, 'status', '');\n        }\n      }\n\n      if (object.name === 'pawn') {\n        inPassing = { turn: turn, object: object };\n      } else {\n        inPassing = { turn: turn, object: null };\n      }\n\n      changeObject(object.id, colIdx, rowIdx, true, true, object.image, object.name);\n      objectChange.push({ id: object.id, row: colIdx, col: rowIdx, lived: true, isMoved: true, object: objectName, image: object.image, name: object.name });\n\n      if (object.name === 'king' || object.name === 'rook') {\n\n        if (castling.length) {\n          let check: boolean = true;\n          if (castling[0].name === 'king') {\n            check = window.confirm('캐슬링 하시겠습니까?');\n          }\n          if (check) {\n            for (let i = 0; i < castling.length; i++) {\n              if (castling[i].checked) {\n                if (castling[i].color === false) {\n                  grid[castling[i].row][castling[i].col].color = 1;\n\n                } else {\n                  grid[castling[i].row][castling[i].col].color = -1;\n                }\n                grid[castling[i].row][castling[i].col].object = false;\n\n                const tempObject: any = Objects.find((element) => { return element.id === castling[i].id });  // 캐슬링 대상의 기물\n\n                console.log('log:', castling[i]);\n\n                grid[tempObject.y][tempObject.x].color = 0;\n                grid[tempObject.y][tempObject.x].object = true;\n\n                changeObject(castling[i].id, castling[i].col, castling[i].row, true, true, castling[i].image, castling[i].name);\n                objectChange.push({ id: castling[i].id, row: castling[i].col, col: castling[i].row, lived: true, isMoved: true, object: castling[i].name, image: castling[i].image, name: castling[i].name });\n              }\n            }\n          }\n        }\n      } else {\n        castling = [];\n      }\n\n      grid[clicked.row][clicked.col].object = true;\n      grid[clicked.row][clicked.col].color = 0;\n      grid[rowIdx][colIdx].object = false;\n\n      if (!object.color) {\n        grid[rowIdx][colIdx].color = 1;\n      } else {\n        grid[rowIdx][colIdx].color = -1;\n      }\n\n      init(grid, 'root', false);\n\n      let data = {\n        grid: grid,\n        object: objectChange,\n        inPassing: inPassing,\n      };\n\n      setTurn(turn + 1);\n\n      socket.emit('moveObject', { roomID: roomID, username: username, data: data, turn: turn }, () => {\n        setMove(!move);\n      })\n    } else {\n      grid[rowIdx][colIdx].click++;\n\n      const object = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });\n\n      setClicked({ row: rowIdx, col: colIdx });\n      searchRoot(object, 'searchRoot');\n    }\n  }\n\n  const init = (object: any, attr: any, value: any) => {\n    for (var i = 0; i < BOARD_SIZE; i++) {\n      for (var j = 0; j < BOARD_SIZE; j++) {\n        if (object[i][j][attr]) {\n          object[i][j][attr] = value;\n        }\n      }\n    }\n  }\n\n  const judgePromotion = () => {\n    const object = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\n    if (object) {\n      if (!object.color) {\n        setPromotionMessage('흑 승급');\n        setPromotionColor('black');\n      } else {\n        setPromotionMessage('백 승급');\n        setPromotionColor('white');\n      }\n    }\n  }\n\n  const searchRoot = async (object: any, type: any) => {\n    let searchBoard = lodash.cloneDeep(board);\n\n    init(searchBoard, 'root', false);\n\n    let color: number = 0;\n    let initPos = 0;\n    let dir: any;\n    if (object.color) {\n      color = -1;\n      initPos = 7;\n    } else {\n      initPos = 0;\n      color = 1;\n    }\n\n    switch (object.name) {\n      case 'pawn':\n        searchBoard = rootPawn(object, initPos, color, searchBoard, type);\n        if (type === 'searchRoot')\n          searchBoard = rootInPassing(object, searchBoard, inPassing);\n\n        break;\n      case 'knight':\n        searchBoard = rootKnight(object, color, searchBoard);\n\n        break;\n      case 'rook':\n        dir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\n        searchBoard = rootFromDir(dir, object, color, searchBoard);\n\n        if (type === 'searchRoot')\n          searchBoard = await checkCastling(object, Objects, searchBoard, board, castling);\n\n        break;\n      case 'bishop':\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\n        searchBoard = rootFromDir(dir, object, color, searchBoard);\n\n        break;\n      case 'king':\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n        searchBoard = rootKing(dir, object, color, searchBoard);\n\n        if (type === 'searchRoot')\n          searchBoard = await checkCastling(object, Objects, searchBoard, board, castling);\n\n        if (type === 'searchRoot')\n          searchBoard = await avoidCheck(object, searchBoard);\n        break;\n      case 'queen':\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n        searchBoard = rootFromDir(dir, object, color, searchBoard);\n\n        break;\n      default:\n        break;\n    }\n\n    if (type === 'searchRoot') {\n      setBoard([...searchBoard]);\n      return null;\n    } else if (type !== 'searchRoot') {\n      return searchBoard;\n    }\n  }\n\n  const judgeGame = async () => {\n    const deadKing: any = Objects.find((element) => { return element.name === 'king' && !element.lived });\n\n    if (deadKing) {\n      if (!deadKing.color) { // 블랙\n        alert('백 승');\n        setPromotionColor('gameSet');\n        let winner: boolean;\n        if (type === 'white') {\n          winner = true;\n        } else {\n          winner = false;\n        }\n        socket.emit('gameSet', { roomID: roomID, winner: winner, opponent: null }, () => {\n        })\n      } else {\n        alert('흑 승');\n        let winner: boolean;\n        if (type === 'black') {\n          winner = true;\n        } else {\n          winner = false;\n        }\n        socket.emit('gameSet', { roomID: roomID, winner: winner, opponent: null }, () => {\n        })\n        setPromotionColor('gameSet');\n      }\n    }\n  }\n\n  const avoidCheck = async (object: any, searchBoard: any) => {\n    const objects: any = Objects.filter(element => object.color === !element.color && element.lived);\n\n    await objects.map(async (element: any) => {\n      let tBoard: any = await searchRoot(element, 'avoidCheck');\n      for (let i = 0; i < 8; i++) {\n        for (let j = 0; j < 8; j++) {\n          if (tBoard[i][j].root && searchBoard[i][j].root) {\n            searchBoard[i][j].root = false;\n          }\n        }\n      }\n    })\n\n    return searchBoard;\n  }\n\n  // 본인의 턴에 체크 상태인지 확인하는 함수\n  const judgeCheck = async () => {\n    let checkBoard = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n\n      return Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\n        return { root: false }\n      });\n    });\n\n    const king: any = Objects.find((element) => { return element.name === 'king' && turn % 2 === 1 ? element.color === false : element.color === true });\n\n    const objects: any = Objects.filter(element => turn % 2 === 1 ? element.color === true && element.lived : element.color === false && element.lived);\n\n    await objects.map(async (element: any) => {\n      console.log(element);\n      let tBoard: any = await searchRoot(element, 'judgeCheck');\n      for (let i = 0; i < 8; i++) {\n        for (let j = 0; j < 8; j++) {\n          if (tBoard[i][j].root) {\n            checkBoard[i][j].root = true;\n          }\n        }\n      }\n    })\n    if (checkBoard[king.y][king.x].root) {\n      alert('check!');\n    }\n  }\n\n  const selectPromotion = (object: any): void => {\n    const pawn: any = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\n    let objectChange = [];\n\n    changeObject(pawn.id, pawn.x, pawn.y, true, true, object.image, object.name);\n    objectChange.push({ id: pawn.id, row: pawn.y, col: pawn.x, lived: true, isMoved: true, object: object.name, image: object.image, name: object.name });\n\n    let data = {\n      object: objectChange,\n      board: board,\n    }\n\n    setPromotionColor('');\n    setPromotionMessage('');\n\n    socket.emit('moveObject', { roomID: roomID, username: username, data: data, turn: turn }, () => {\n      setMove(!move);\n    })\n  }\n\n  const selectImage = (object: any, rowIdx: number, colIdx: number) => {\n    if (object) {\n      return object.image;\n    } else {\n      return board[rowIdx][colIdx].image;\n    }\n  }\n\n  const checkDisabled = (rowIdx: number, colIdx: number) => {\n    if ((type === 'black' && turn % 2 === 1) || (type === 'white' && turn % 2 === 0)) {\n      if (board[rowIdx][colIdx].object) {\n        if (board[rowIdx][colIdx].root) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        if (board[rowIdx][colIdx].root) {\n          return false;\n        }\n        if ((board[rowIdx][colIdx].color === 1 && (turn % 2) === 1) || (board[rowIdx][colIdx].color === -1 && (turn % 2) === 0)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    } else {\n      return true;\n    }\n  }\n\n  const checkColor = (color: string, rowIdx: number, colIdx: number) => {\n    if (board[rowIdx][colIdx].root) {\n      return \"#cccccc\";\n    } else {\n      return color;\n    }\n  }\n\n  const backToHome = () => {\n    let check: boolean;\n    if (promotionColor === 'gameSet') {\n      check = window.confirm('방을 나가시겠습니까?');\n    } else {\n      check = window.confirm('방을 나가시겠습니까? 기권 처리됩니다.');\n    }\n\n    if (check) {\n      if (promotionColor !== 'gameSet') {\n        socket.emit('gameSet', { roomID: roomID, winner: false, opponent: username }, () => {\n          setMove(!move);\n        })\n      }\n\n      Objects.map(object => {\n        removeObject(object.id);\n      })\n\n      history.push('/home');\n      window.location.reload();\n    }\n  }\n\n  const renderBoard = () => {\n    return Array.apply(null, Array(BOARD_SIZE)).map((el, rowIdx) => {\n      let cellList = Array.apply(null, Array(BOARD_SIZE)).map((el, colIdx) => {\n        return (\n          <div>\n            {(rowIdx + colIdx) % 2 === 0 ? <button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#996600', rowIdx, colIdx), border: '1px solid black' }}>\n              {Objects.map(object => { // 오브젝트 32개 탐색\n                if (object.x === colIdx && object.y === rowIdx && object.lived) {\n                  return <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n                }\n              })}\n              {checkColor('#ffcc66', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\n                <Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\n            </button> :\n              <button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#ffcc66', rowIdx, colIdx), border: '1px solid black' }}>\n                {Objects.map(object => { // 오브젝트 32개 탐색\n                  if (object.x === colIdx && object.y === rowIdx && object.lived) {\n                    return <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n                  }\n                })}\n                {checkColor('#996600', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\n                  <Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\n              </button>\n            }\n          </div>\n        )\n      });\n\n      return (\n        <div\n          key={rowIdx}\n          style={{\n            width: boardWidth,\n            height: CELL_SIZE,\n            display: 'flex',\n            alignItems: 'flex-start'\n          }}>\n          {cellList}\n        </div>\n      )\n    });\n  }\n\n  return (\n    <div>\n      <div style={{ marginLeft: '5%', marginTop: '5%', float: 'left' }}>\n        {renderBoard()}\n      </div>\n      <div style={{ marginLeft: '3%', marginTop: '5%', float: 'left', width: '35%', textAlign: 'center' }}>\n        <div style={{ height: '5rem' }}>\n          {turn % 2 === 1 ? <div style={{ fontSize: '1.5rem' }}>BLACK TURN {turn}</div> : <div style={{ fontSize: '1.5rem' }}>WHITE TURN {turn}</div>}\n        </div>\n        <div className=\"row h-100 justify-content-center align-items-center\">\n          <div style={{ margin: '3%', width: '8rem' }}>\n            <div style={{ textAlign: 'center', fontSize: '1.2rem', fontStyle: 'italic' }}>\n              Black Dead\n            </div>\n            <br />\n            <div style={{ textAlign: 'left', height: '5rem', width: '8rem' }}>\n              {Objects.map(object => {\n                if (!object.lived && !object.color) {\n                  return <img src={object.image} style={{ width: '1.5rem', height: '30px', paddingRight: '0.2rem' }} />\n                }\n              })}\n            </div>\n          </div>\n          <div style={{ margin: '1rem', width: '8rem' }}>\n            <div style={{ textAlign: 'center', fontSize: '1.2rem', fontStyle: 'italic' }}>\n              White Dead\n            </div>\n            <br />\n            <div style={{ textAlign: 'left', height: '5rem', width: '8rem' }}>\n              {Objects.map(object => {\n                if (!object.lived && object.color) {\n                  return <img src={object.image} style={{ width: '1.5rem', height: '30px', paddingRight: '0.2rem' }} />\n                }\n              })}\n            </div>\n          </div>\n        </div>\n        <div style={{ height: '10rem' }}>\n          {type === promotionColor ? <Promotion color={promotionColor} selectPromotion={selectPromotion} /> :\n            promotionMessage}\n        </div>\n        <div>\n          <Button variant=\"dark\" onClick={backToHome}>뒤로 가기</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Game;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\init.tsx",["404","405","406","407","408","409","410","411","412"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useObjects.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\promotion.tsx",["413","414"],"import React, { useEffect, useState } from 'react';\n\nimport {\n\tButton,\n\tImage,\n} from \"react-bootstrap\";\n\nimport black_queen from '../../images/black_queen.png';\nimport black_rook from '../../images/black_rook.png';\nimport black_knight from '../../images/black_knight.png';\nimport black_bishop from '../../images/black_bishop.png';\n\nimport white_queen from '../../images/white_queen.png';\nimport white_rook from '../../images/white_rook.png';\nimport white_knight from '../../images/white_knight.png';\nimport white_bishop from '../../images/white_bishop.png';\n\nconst CELL_SIZE = 60;\nconst BOARD_SIZE = 8;\n\nlet blackObjects = [\n\t{ image: black_queen, name: 'queen' },\n\t{ image: black_rook, name: 'rook' },\n\t{ image: black_knight, name: 'knight' },\n\t{ image: black_bishop, name: 'bishop' }\n];\nlet whiteObjects = [\n\t{ image: white_queen, name: 'queen' },\n\t{ image: white_rook, name: 'rook' },\n\t{ image: white_knight, name: 'knight' },\n\t{ image: white_bishop, name: 'bishop' }\n];\n\nconst Promotion = (props: any) => {\n\n\tconst [object, setObject] = useState();\n\n\tconst selectObject = (object: any) => {\n\t\tsetObject(object);\n\n\t\t//props.selectPromotion(object);\n\t}\n\n\tconst onSubmit = () => {\n\t\tif(object) {\n\t\t\tprops.selectPromotion(object);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{props.color === 'black' && <div>\n\t\t\t\t{blackObjects.map((element: any) => {\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n\t\t\t\t\t</button>\n\t\t\t\t})}\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => onSubmit()} variant=\"dark\" style={{width: '3rem', height:'2rem', marginTop: '1rem', textAlign: 'center', padding: '0rem'}}>승급</Button>\n\t\t\t\t</div>\n\t\t\t</div>}\n\t\t\t{props.color === 'white' && <div>\n\t\t\t\t{whiteObjects.map((element: any) => {\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\n\t\t\t\t\t</button>\n\t\t\t\t})}\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => onSubmit()} variant=\"dark\" style={{width: '3rem', height:'2rem', marginTop: '1rem', textAlign: 'center', padding: '0rem'}}>승급</Button>\n\t\t\t\t</div>\n\t\t\t</div>}\n\n\t\t</div>\n\t)\n}\n\nexport default Promotion;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Game\\rootFinding.tsx",["415","416"],"import { Component } from 'react';\nconst lodash = require('lodash');\n\nconst BOARD_SIZE = 8;\n\nconst rootPawn = (object: any, initPos: number, color: number, grid: any, type: string): Promise<any> => {\n\tif (type === 'searchRoot') {\n\t\tif (object.y == initPos + color) {\n\t\t\tif (grid[object.y + 2 * color][object.x].object && grid[object.y + color][object.x].object) {\n\t\t\t\tgrid[object.y + 2 * color][object.x].root = true;\n\t\t\t\tgrid[object.y + 2 * color][object.x].image = object.image;\n\t\t\t}\n\t\t}\n\n\t\tif (isInside(object.y + color, object.x) && grid[object.y + color][object.x].object) {\n\t\t\tgrid[object.y + color][object.x].root = true;\n\t\t\tgrid[object.y + color][object.x].image = object.image;\n\t\t}\n\t}\n\tif(type === 'avoidCheck') {\n\t\tif (isInside(object.y + color, object.x + 1)) {\n\t\t\tgrid[object.y + color][object.x + 1].root = true;\n\t\t\tgrid[object.y + color][object.x + 1].image = object.image;\n\t\t}\n\t\tif (isInside(object.y + color, object.x - 1)) {\n\t\t\tgrid[object.y + color][object.x - 1].root = true;\n\t\t\tgrid[object.y + color][object.x - 1].image = object.image;\n\t\t}\n\t}\n\tif (isInside(object.y + color, object.x + 1) && !grid[object.y + color][object.x + 1].object && grid[object.y + color][object.x + 1].color === -1 * color) {\n\t\tgrid[object.y + color][object.x + 1].root = true;\n\t\tgrid[object.y + color][object.x + 1].image = object.image;\n\t}\n\tif (isInside(object.y + color, object.x - 1) && !grid[object.y + color][object.x - 1].object && grid[object.y + color][object.x - 1].color === -1 * color) {\n\t\tgrid[object.y + color][object.x - 1].root = true;\n\t\tgrid[object.y + color][object.x - 1].image = object.image;\n\t}\n\treturn grid;\n}\n\nconst rootKnight = (object: any, color: number, grid: any): Promise<any> => {\n\tlet dir_first = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n\tlet dir_second = [[-1, -1], [-1, 1], [1, 1], [1, -1]];\n\n\tfor (var i = 0; i < dir_first.length; i++) {\n\t\tfor (var cnt: number = 0; cnt < 2; cnt++) {\n\t\t\tvar j: number = i + cnt;\n\t\t\tif (j === 4) {\n\t\t\t\tj -= 4;\n\t\t\t}\n\t\t\tif (isInside(object.y + dir_first[i][0] + dir_second[j][0], object.x + dir_first[i][1] + dir_second[j][1])) {\n\t\t\t\tif (!grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].object) {\n\t\t\t\t\tif (grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].color === -1 * color) {\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn grid;\n}\n\nconst rootFromDir = (dir: any, object: any, color: number, grid: any): Promise<any> => {\n\tfor (var i = 0; i < dir.length; i++) {\n\t\tvar cnt = 1;\n\t\twhile (isInside(object.y + dir[i][0] * cnt, object.x + dir[i][1] * cnt)) {\n\t\t\t// 기물이 존재하고 같은 색일때,\n\t\t\tif (!grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].object) {\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === color) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === -1 * color) {\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t}\n\treturn grid;\n}\n\nconst rootKing = (dir: any, object: any, color: number, grid: any): Promise<any> => {\n\tfor (var i = 0; i < dir.length; i++) {\n\t\tif (isInside(object.y + dir[i][0], object.x + dir[i][1])) {\n\t\t\tif (!grid[object.y + dir[i][0]][object.x + dir[i][1]].object) {\n\t\t\t\tif (grid[object.y + dir[i][0]][object.x + dir[i][1]].color === -1 * color) {\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn grid;\n}\n\nconst checkCastling = async (object: any, Objects: any, grid: any, board: any, castling: any): Promise<any> => {\n\tif (object.name === 'rook' && !object.isMoved) {\t// 룩 기준 -> 움직인 적 없이 초기 위치일시\n\t\tif (!object.color && object.y === 0 && (object.x === 0 || object.x === 7)) {\t// 블랙\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\n\t\t\tif (!king.isMoved && king.y === 0 && king.x === 4) {\n\t\t\t\tif (object.x === 0) {\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 0, 4, -1);\n\n\t\t\t\t\tif(check) {\n\t\t\t\t\t\treturn grid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 2, color: object.color, image: king.image });\n\t\t\t\t\t}\n\t\t\t\t\treturn grid;\n\t\t\t\t} else {\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 0, 3, 1);\n\n\t\t\t\t\tif(check) {\n\t\t\t\t\t\treturn grid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 6, color: object.color, image: king.image });\n\t\t\t\t\t}\n\t\t\t\t\treturn grid;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (object.color && object.y === 7 && (object.x === 0 || object.x === 7)) {\t// 화이트\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\n\t\t\tif (!king.isMoved && king.y === 7 && king.x === 4) {\n\t\t\t\tif (object.x === 0) {\n\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 7, 4, -1);\n\n\t\t\t\t\tif(check) {\n\t\t\t\t\t\treturn grid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 2, color: object.color, image: king.image });\n\t\t\t\t\t}\n\t\t\t\t\treturn grid;\n\t\t\t\t} else {\n\n\t\t\t\t\tlet check = await judgeBlankedRook(Objects, object, board, grid, king, castling, 7, 3, 1);\n\t\t\t\t\t\n\t\t\t\t\tif(check) {\n\t\t\t\t\t\treturn grid;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 6, color: object.color, image: king.image });\n\t\t\t\t\t}\n\t\t\t\t\treturn grid;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (object.name === 'king' && !object.isMoved) {\n\t\tconst rook: any = Objects.filter((element:any) => element.name === 'rook' && element.color === object.color && !element.isMoved);\n\t\tfor (let i = 0; i < rook.length; i++) {\n\t\t\tif (rook[i].x === 7) {\n\t\t\t\tlet isBlanked = true;\n\t\t\t\t\n\t\t\t\tisBlanked = await judgeBlankedKing(Objects,board, grid, object, castling, isBlanked, 1);\n\n\t\t\t\tawait judgeCastling(isBlanked, grid, object, castling, rook[i], 1);\n\n\t\t\t} else if (rook[i].x === 0) {\n\t\t\t\tlet isBlanked = true;\n\t\t\t\t\n\t\t\t\tisBlanked = await judgeBlankedKing(Objects,board, grid, object, castling, isBlanked, -1);\n\n\t\t\t\tawait judgeCastling(isBlanked, grid, object, castling, rook[i], -1);\n\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t}\n\treturn grid;\n}\n\nconst judgeCastling = (isBlanked:boolean, grid:any, object: any, castling:any, rook:any, bool:number) => {\n\tif (isBlanked) {\n\t\tgrid[object.y][object.x + 2 * bool].root = true;\n\t\tgrid[object.y][object.x + 2 * bool].image = object.image;\n\t\tcastling.push({ checked: true, id: rook.id, name: 'rook', row: object.y, col: object.x + 1 * bool, color: object.color, image: rook.image });\n\t}\n}\n\nconst judgeBlankedRook = async (Objects:any, object:any, board:any, grid:any, king:any, castling:any, row: number, idx: number, bool:number): Promise<any> => {\n\tfor (let i = 1; i < idx; i++) {\n\t\tconst temp: any = Objects.find((element:any) => { return element.y === row && element.x === object.x - i * bool });\n\t\tif (temp) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif(!await judgeCheck(Objects, board, grid, object, king.y, king.x + (i - 1) * bool, castling)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nconst judgeBlankedKing = async (Objects:any, board:any, grid:any, object:any, castling:any, isBlanked:boolean, bool:number): Promise<any> => {\n\tfor (let j = 1; j < 4; j++) {\n\t\tif(!await judgeCheck(Objects, board, grid, object, object.y, object.x + (j - 1) * bool, castling)) {\n\t\t\tisBlanked = false;\n\t\t\tconsole.log(object.y, object.x + (j - 1) * bool, '123');\n\t\t\treturn isBlanked;\n\t\t}\n\t\t\n\t\tconst temp: any = Objects.find((element:any) => { return element.y === object.y && element.x === object.x + j * bool });\n\t\tif (temp && temp.name !== 'rook') {\n\t\t\tisBlanked = false;\n\t\t\treturn isBlanked;\n\t\t}\n\t}\n\n\treturn isBlanked;\n}\n\nconst judgeCheck = async (Objects:any, board:any, searchBoard:any, object:any, row:number, col:number, castling: any): Promise<any> => {\n\tconst objects: any = Objects.filter((element:any) => object.color === !element.color && element.lived);\n\n\tlet check = true;\n\n\tawait objects.map(async (element: any) => {\n\t\tlet tBoard: any = await searchRoot(board, element, 'judgeCheck');\n\n\t\tif(tBoard[row][col].root) {\n\t\t\tcheck = false;\n\t\t\tif(object.name === 'king') {\n\t\t\t\tsearchBoard[object.y][object.x - 2].root = false;\n\t\t\t\tsearchBoard[object.y][object.x - 2].image = null;\n\t\t\t}\n\t\t\tcastling = [];\n\t\t}\n\t})\n\t\n\tconsole.log(row, col, check);\n\treturn check;\n}\n\n// 앙 파상을 탐색하는 함수\nconst rootInPassing = (object: any, searchBoard: any, inPassing: any): Promise<any> => {\n\tif (inPassing && inPassing.object && !inPassing.object.isMoved && object.name === 'pawn') {\t// 바로 이전 턴에 움직인, 처음 움직인 폰에 한해서 적용\n\t\tif (!inPassing.object.color) {\t//블랙\n\n\t\t\tif (object.y === inPassing.object.y + 2) {\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].root = true;\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].image = object.image;\n\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].root = true;\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].image = object.image;\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (object.y === inPassing.object.y - 2) {\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].root = true;\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].image = object.image;\n\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].root = true;\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].image = object.image;\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn searchBoard;\n}\n\n\n\nconst searchRoot = async (board:any, object: any, type: any): Promise<any> => {\n\tlet searchBoard = lodash.cloneDeep(board);\n\n\tinit(searchBoard, 'root', false);\n\n\tlet color: number = 0;\n\tlet initPos = 0;\n\tlet dir: any;\n\n\tif (object.color) {\n\t\tcolor = -1;\n\t\tinitPos = 7;\n\t} else {\n\t\tinitPos = 0;\n\t\tcolor = 1;\n\t}\n\n\tswitch (object.name) {\n\t\tcase 'pawn':\n\t\t\tsearchBoard = rootPawn(object, initPos, color, searchBoard, type);\n\n\t\t\tbreak;\n\t\tcase 'knight':\n\t\t\tsearchBoard = rootKnight(object, color, searchBoard);\n\t\t\tbreak;\n\t\tcase 'rook':\n\t\t\tdir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\n\t\t\tbreak;\n\t\tcase 'bishop':\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\t\t\tbreak;\n\t\tcase 'king':\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n\n\t\t\tsearchBoard = rootKing(dir, object, color, searchBoard);\n\n\t\t\tbreak;\n\t\tcase 'queen':\n\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\n\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn searchBoard;\n}\n\nconst isInside = (row: number, col: number): any => {\n\treturn row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE;\n}\n\nconst init = (object: any, attr: any, value: any) => {\n\tfor (var i = 0; i < BOARD_SIZE; i++) {\n\t\tfor (var j = 0; j < BOARD_SIZE; j++) {\n\t\t\tif (object[i][j][attr]) {\n\t\t\t\tobject[i][j][attr] = value;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing };","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useAddUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useAddObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useChangeObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\hooks\\useRemoveObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\objects\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\user\\reducer.ts",["417","418"],"import { unstable_renderSubtreeIntoContainer } from \"react-dom\";\nimport { createReducer } from \"typesafe-actions\";\nimport { setConstantValue } from \"typescript\";\nimport { ADD_USER, CHANGE_USER } from \"./actions\";\nimport { UserAction, UserState } from \"./types\";\n\n// 초깃값 설정\nconst initialState: UserState = [];\n\nconst user = createReducer<UserState, UserAction>(initialState, {\n  [ADD_USER]: (state, { payload }) =>\n    state.concat({\n      email: payload.email,\n      username: payload.username,\n      win: payload.win,\n      lose: payload.lose,\n    }), \n  [CHANGE_USER]: (state, { payload }) =>\n    state.map(user => true ? ({ email: payload.email, username: payload.username, win: payload.win, lose: payload.lose }) : user),\n});\nexport default user;","C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\modules\\logged\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\typescript-chess-master\\typescript-chess-master\\ts-front\\src\\components\\Init\\Init.tsx",["419","420","421","422","423","424","425","426","427"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport useChangeLogged from '../../hooks/useChangeLogged';\nimport useLogged from '../../hooks/useLogged';\n\nimport useChangeUser from '../../hooks/useChangeUser';\nimport useAddUser from '../../hooks/useAddUser';\nimport useUser from '../../hooks/useUser';\nimport { User } from '../../modules/user';\n\nimport {\n  Button,\n  Form,\n  Card,\n  Image,\n} from \"react-bootstrap\";\n\nimport chess_image from '../../images/chess.jpg';\n\nimport { useCookies } from \"react-cookie\";\nimport { set } from \"js-cookie\";\n\nconst Init = () => {\n  const Logged = useLogged();\n  const User = useUser();\n  const addUser = useAddUser();\n\n  const changeLogged = useChangeLogged();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let history = useHistory();\n\n  const submitHandler = (event: any): void => {\n    event.preventDefault();\n\n    const user = {\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(`/api/auth/login`, user)\n      .then((res: any) => {\n        console.log('data:', res.data);\n\n        changeLogged(true, email);\n        addUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\n        history.push(\"/home\");\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n\n    //console.log(User);\n  };\n\n  return (\n    <div>\n      <div style={{ width: '100%', backgroundColor: '#cccccc', height: '39rem' }}>\n        <div style={{ height: \"10rem\" }}>\n        </div>\n        <div className=\"row\">\n          <div style={{ width: '52%', height: '100%', marginRight: '7%', marginLeft: '5%' }}>\n            <Image src={chess_image} />\n          </div>\n          <Card border=\"dark\" style={{ width: \"30%\", height: \"20%\" }}>\n            <div className=\"row h-100 justify-content-center align-items-center\">\n              <form onSubmit={submitHandler} className=\"col-10\">\n                <br />\n                <h2 style={{ fontWeight: \"bolder\", textAlign: 'center' }}>로그인</h2>\n                <hr />\n\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form inline>\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      style={{ width: \"100%\" }}\n                      onChange={({ target: { value } }) => setEmail(value)}\n                      placeholder=\"이메일을 입력하세요.\"\n                    />\n                  </Form>\n                  <Form inline>\n                    <Form.Label style={{ width: \"100%\" }}></Form.Label>\n                    <Form.Text className=\"text-muted\">\n                      이메일 형식에 맞게 입력해주세요.\n                      </Form.Text>\n                  </Form>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form inline>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      style={{ width: \"100%\" }}\n                      onChange={({ target: { value } }) => setPassword(value)}\n                      placeholder=\"비밀번호를 입력하세요.\"\n                    />\n                  </Form>\n                </Form.Group>\n\n                <button type=\"submit\" className=\"btn btn-dark btn-block\">\n                  로그인하기\n                </button>\n\n                <div className=\"App-wrapper\" style={{ width: '100%' }}>\n                  <p className=\"forgot-password text-center\">\n                    <Link to='/signup' style={{ textDecoration: 'none', color: 'black' }}>\n                      회원가입\n                    </Link>\n                    <a>\n                    </a>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Init;",{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":14},{"ruleId":"432","severity":1,"message":"436","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":13},{"ruleId":"432","severity":1,"message":"437","line":7,"column":3,"nodeType":"434","messageId":"435","endLine":7,"endColumn":9},{"ruleId":"438","severity":1,"message":"439","line":85,"column":19,"nodeType":"440","endLine":85,"endColumn":22},{"ruleId":"438","severity":1,"message":"439","line":88,"column":19,"nodeType":"440","endLine":88,"endColumn":22},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"442","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":21},{"ruleId":"432","severity":1,"message":"443","line":12,"column":10,"nodeType":"434","messageId":"435","endLine":12,"endColumn":14},{"ruleId":"432","severity":1,"message":"437","line":15,"column":3,"nodeType":"434","messageId":"435","endLine":15,"endColumn":9},{"ruleId":"432","severity":1,"message":"444","line":23,"column":10,"nodeType":"434","messageId":"435","endLine":23,"endColumn":20},{"ruleId":"432","severity":1,"message":"445","line":24,"column":10,"nodeType":"434","messageId":"435","endLine":24,"endColumn":13},{"ruleId":"432","severity":1,"message":"446","line":27,"column":9,"nodeType":"434","messageId":"435","endLine":27,"endColumn":15},{"ruleId":"432","severity":1,"message":"447","line":28,"column":9,"nodeType":"434","messageId":"435","endLine":28,"endColumn":13},{"ruleId":"438","severity":1,"message":"439","line":116,"column":21,"nodeType":"440","endLine":116,"endColumn":24},{"ruleId":"432","severity":1,"message":"448","line":1,"column":38,"nodeType":"434","messageId":"435","endLine":1,"endColumn":49},{"ruleId":"432","severity":1,"message":"449","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":12},{"ruleId":"432","severity":1,"message":"450","line":37,"column":10,"nodeType":"434","messageId":"435","endLine":37,"endColumn":31},{"ruleId":"432","severity":1,"message":"451","line":75,"column":9,"nodeType":"434","messageId":"435","endLine":75,"endColumn":16},{"ruleId":"452","severity":1,"message":"453","line":139,"column":6,"nodeType":"454","endLine":139,"endColumn":33,"suggestions":"455"},{"ruleId":"452","severity":1,"message":"456","line":147,"column":6,"nodeType":"454","endLine":147,"endColumn":12,"suggestions":"457"},{"ruleId":"452","severity":1,"message":"458","line":156,"column":6,"nodeType":"454","endLine":156,"endColumn":17,"suggestions":"459"},{"ruleId":"452","severity":1,"message":"460","line":215,"column":6,"nodeType":"454","endLine":215,"endColumn":12,"suggestions":"461"},{"ruleId":"462","severity":1,"message":"463","line":280,"column":54,"nodeType":"464","messageId":"465","endLine":280,"endColumn":107},{"ruleId":"466","severity":1,"message":"467","line":570,"column":26,"nodeType":"464","messageId":"468","endLine":570,"endColumn":28},{"ruleId":"466","severity":1,"message":"469","line":585,"column":35,"nodeType":"464","messageId":"470","endLine":585,"endColumn":37},{"ruleId":"466","severity":1,"message":"469","line":594,"column":37,"nodeType":"464","messageId":"470","endLine":594,"endColumn":39},{"ruleId":"466","severity":1,"message":"469","line":638,"column":35,"nodeType":"464","messageId":"470","endLine":638,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":640,"column":26,"nodeType":"440","endLine":640,"endColumn":120},{"ruleId":"466","severity":1,"message":"469","line":651,"column":35,"nodeType":"464","messageId":"470","endLine":651,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":653,"column":26,"nodeType":"440","endLine":653,"endColumn":120},{"ruleId":"432","severity":1,"message":"437","line":3,"column":9,"nodeType":"434","messageId":"435","endLine":3,"endColumn":15},{"ruleId":"432","severity":1,"message":"473","line":18,"column":10,"nodeType":"434","messageId":"435","endLine":18,"endColumn":29},{"ruleId":"432","severity":1,"message":"474","line":20,"column":7,"nodeType":"434","messageId":"435","endLine":20,"endColumn":12},{"ruleId":"432","severity":1,"message":"475","line":21,"column":7,"nodeType":"434","messageId":"435","endLine":21,"endColumn":12},{"ruleId":"452","severity":1,"message":"476","line":55,"column":5,"nodeType":"454","endLine":55,"endColumn":7,"suggestions":"477"},{"ruleId":"471","severity":1,"message":"472","line":61,"column":6,"nodeType":"440","endLine":61,"endColumn":82},{"ruleId":"471","severity":1,"message":"472","line":67,"column":7,"nodeType":"440","endLine":67,"endColumn":83},{"ruleId":"428","replacedBy":"478"},{"ruleId":"430","replacedBy":"479"},{"ruleId":"432","severity":1,"message":"480","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":45},{"ruleId":"432","severity":1,"message":"481","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":26},{"ruleId":"432","severity":1,"message":"482","line":11,"column":10,"nodeType":"434","messageId":"435","endLine":11,"endColumn":17},{"ruleId":"432","severity":1,"message":"443","line":11,"column":19,"nodeType":"434","messageId":"435","endLine":11,"endColumn":23},{"ruleId":"432","severity":1,"message":"483","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":19},{"ruleId":"432","severity":1,"message":"484","line":19,"column":10,"nodeType":"434","messageId":"435","endLine":19,"endColumn":21},{"ruleId":"432","severity":1,"message":"485","line":19,"column":23,"nodeType":"434","messageId":"435","endLine":19,"endColumn":31},{"ruleId":"432","severity":1,"message":"486","line":19,"column":33,"nodeType":"434","messageId":"435","endLine":19,"endColumn":51},{"ruleId":"432","severity":1,"message":"446","line":25,"column":8,"nodeType":"434","messageId":"435","endLine":25,"endColumn":14},{"ruleId":"452","severity":1,"message":"487","line":53,"column":5,"nodeType":"454","endLine":53,"endColumn":7,"suggestions":"488"},{"ruleId":"452","severity":1,"message":"489","line":76,"column":5,"nodeType":"454","endLine":76,"endColumn":38,"suggestions":"490"},{"ruleId":"452","severity":1,"message":"491","line":140,"column":5,"nodeType":"454","endLine":140,"endColumn":14,"suggestions":"492"},{"ruleId":"432","severity":1,"message":"493","line":30,"column":8,"nodeType":"434","messageId":"435","endLine":30,"endColumn":15},{"ruleId":"432","severity":1,"message":"494","line":39,"column":5,"nodeType":"434","messageId":"435","endLine":39,"endColumn":16},{"ruleId":"452","severity":1,"message":"495","line":103,"column":5,"nodeType":"454","endLine":103,"endColumn":7,"suggestions":"496"},{"ruleId":"452","severity":1,"message":"497","line":110,"column":5,"nodeType":"454","endLine":110,"endColumn":11,"suggestions":"498"},{"ruleId":"462","severity":1,"message":"463","line":173,"column":47,"nodeType":"464","messageId":"465","endLine":173,"endColumn":100},{"ruleId":"466","severity":1,"message":"467","line":387,"column":22,"nodeType":"464","messageId":"468","endLine":387,"endColumn":24},{"ruleId":"466","severity":1,"message":"469","line":417,"column":28,"nodeType":"464","messageId":"470","endLine":417,"endColumn":30},{"ruleId":"466","severity":1,"message":"469","line":426,"column":29,"nodeType":"464","messageId":"470","endLine":426,"endColumn":31},{"ruleId":"466","severity":1,"message":"469","line":470,"column":35,"nodeType":"464","messageId":"470","endLine":470,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":472,"column":26,"nodeType":"440","endLine":472,"endColumn":120},{"ruleId":"466","severity":1,"message":"469","line":483,"column":35,"nodeType":"464","messageId":"470","endLine":483,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":485,"column":26,"nodeType":"440","endLine":485,"endColumn":120},{"ruleId":"432","severity":1,"message":"499","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":8,"column":16,"nodeType":"502","messageId":"503","endLine":8,"endColumn":18},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"504","line":19,"column":7,"nodeType":"434","messageId":"435","endLine":19,"endColumn":17},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"505","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":20},{"ruleId":"432","severity":1,"message":"445","line":8,"column":10,"nodeType":"434","messageId":"435","endLine":8,"endColumn":13},{"ruleId":"428","replacedBy":"506"},{"ruleId":"430","replacedBy":"507"},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"505","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":20},{"ruleId":"432","severity":1,"message":"445","line":8,"column":10,"nodeType":"434","messageId":"435","endLine":8,"endColumn":13},{"ruleId":"432","severity":1,"message":"482","line":11,"column":10,"nodeType":"434","messageId":"435","endLine":11,"endColumn":17},{"ruleId":"432","severity":1,"message":"443","line":11,"column":19,"nodeType":"434","messageId":"435","endLine":11,"endColumn":23},{"ruleId":"432","severity":1,"message":"483","line":13,"column":8,"nodeType":"434","messageId":"435","endLine":13,"endColumn":19},{"ruleId":"432","severity":1,"message":"484","line":19,"column":10,"nodeType":"434","messageId":"435","endLine":19,"endColumn":21},{"ruleId":"432","severity":1,"message":"485","line":19,"column":23,"nodeType":"434","messageId":"435","endLine":19,"endColumn":31},{"ruleId":"432","severity":1,"message":"486","line":19,"column":33,"nodeType":"434","messageId":"435","endLine":19,"endColumn":51},{"ruleId":"432","severity":1,"message":"446","line":25,"column":8,"nodeType":"434","messageId":"435","endLine":25,"endColumn":14},{"ruleId":"452","severity":1,"message":"487","line":53,"column":5,"nodeType":"454","endLine":53,"endColumn":7,"suggestions":"508"},{"ruleId":"452","severity":1,"message":"489","line":76,"column":5,"nodeType":"454","endLine":76,"endColumn":38,"suggestions":"509"},{"ruleId":"452","severity":1,"message":"491","line":140,"column":5,"nodeType":"454","endLine":140,"endColumn":14,"suggestions":"510"},{"ruleId":"432","severity":1,"message":"493","line":30,"column":8,"nodeType":"434","messageId":"435","endLine":30,"endColumn":15},{"ruleId":"432","severity":1,"message":"494","line":39,"column":5,"nodeType":"434","messageId":"435","endLine":39,"endColumn":16},{"ruleId":"452","severity":1,"message":"495","line":103,"column":5,"nodeType":"454","endLine":103,"endColumn":7,"suggestions":"511"},{"ruleId":"452","severity":1,"message":"497","line":110,"column":5,"nodeType":"454","endLine":110,"endColumn":11,"suggestions":"512"},{"ruleId":"462","severity":1,"message":"463","line":173,"column":47,"nodeType":"464","messageId":"465","endLine":173,"endColumn":100},{"ruleId":"466","severity":1,"message":"467","line":387,"column":22,"nodeType":"464","messageId":"468","endLine":387,"endColumn":24},{"ruleId":"466","severity":1,"message":"469","line":417,"column":28,"nodeType":"464","messageId":"470","endLine":417,"endColumn":30},{"ruleId":"466","severity":1,"message":"469","line":426,"column":29,"nodeType":"464","messageId":"470","endLine":426,"endColumn":31},{"ruleId":"466","severity":1,"message":"469","line":470,"column":35,"nodeType":"464","messageId":"470","endLine":470,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":472,"column":26,"nodeType":"440","endLine":472,"endColumn":120},{"ruleId":"466","severity":1,"message":"469","line":483,"column":35,"nodeType":"464","messageId":"470","endLine":483,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":485,"column":26,"nodeType":"440","endLine":485,"endColumn":120},{"ruleId":"432","severity":1,"message":"448","line":1,"column":38,"nodeType":"434","messageId":"435","endLine":1,"endColumn":49},{"ruleId":"432","severity":1,"message":"449","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":12},{"ruleId":"432","severity":1,"message":"450","line":37,"column":10,"nodeType":"434","messageId":"435","endLine":37,"endColumn":31},{"ruleId":"432","severity":1,"message":"451","line":75,"column":9,"nodeType":"434","messageId":"435","endLine":75,"endColumn":16},{"ruleId":"452","severity":1,"message":"453","line":139,"column":6,"nodeType":"454","endLine":139,"endColumn":33,"suggestions":"513"},{"ruleId":"452","severity":1,"message":"456","line":147,"column":6,"nodeType":"454","endLine":147,"endColumn":12,"suggestions":"514"},{"ruleId":"452","severity":1,"message":"458","line":156,"column":6,"nodeType":"454","endLine":156,"endColumn":17,"suggestions":"515"},{"ruleId":"452","severity":1,"message":"460","line":215,"column":6,"nodeType":"454","endLine":215,"endColumn":12,"suggestions":"516"},{"ruleId":"462","severity":1,"message":"463","line":280,"column":54,"nodeType":"464","messageId":"465","endLine":280,"endColumn":107},{"ruleId":"466","severity":1,"message":"467","line":570,"column":26,"nodeType":"464","messageId":"468","endLine":570,"endColumn":28},{"ruleId":"466","severity":1,"message":"469","line":585,"column":35,"nodeType":"464","messageId":"470","endLine":585,"endColumn":37},{"ruleId":"466","severity":1,"message":"469","line":594,"column":37,"nodeType":"464","messageId":"470","endLine":594,"endColumn":39},{"ruleId":"466","severity":1,"message":"469","line":638,"column":35,"nodeType":"464","messageId":"470","endLine":638,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":640,"column":26,"nodeType":"440","endLine":640,"endColumn":120},{"ruleId":"466","severity":1,"message":"469","line":651,"column":35,"nodeType":"464","messageId":"470","endLine":651,"endColumn":37},{"ruleId":"471","severity":1,"message":"472","line":653,"column":26,"nodeType":"440","endLine":653,"endColumn":120},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"442","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":21},{"ruleId":"432","severity":1,"message":"443","line":12,"column":10,"nodeType":"434","messageId":"435","endLine":12,"endColumn":14},{"ruleId":"432","severity":1,"message":"437","line":15,"column":3,"nodeType":"434","messageId":"435","endLine":15,"endColumn":9},{"ruleId":"432","severity":1,"message":"444","line":23,"column":10,"nodeType":"434","messageId":"435","endLine":23,"endColumn":20},{"ruleId":"432","severity":1,"message":"445","line":24,"column":10,"nodeType":"434","messageId":"435","endLine":24,"endColumn":13},{"ruleId":"432","severity":1,"message":"446","line":27,"column":9,"nodeType":"434","messageId":"435","endLine":27,"endColumn":15},{"ruleId":"432","severity":1,"message":"447","line":28,"column":9,"nodeType":"434","messageId":"435","endLine":28,"endColumn":13},{"ruleId":"438","severity":1,"message":"439","line":116,"column":21,"nodeType":"440","endLine":116,"endColumn":24},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"504","line":19,"column":7,"nodeType":"434","messageId":"435","endLine":19,"endColumn":17},{"ruleId":"432","severity":1,"message":"499","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":8,"column":16,"nodeType":"502","messageId":"503","endLine":8,"endColumn":18},{"ruleId":"432","severity":1,"message":"480","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":45},{"ruleId":"432","severity":1,"message":"481","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":26},{"ruleId":"432","severity":1,"message":"441","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":26},{"ruleId":"432","severity":1,"message":"442","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":21},{"ruleId":"432","severity":1,"message":"443","line":12,"column":10,"nodeType":"434","messageId":"435","endLine":12,"endColumn":14},{"ruleId":"432","severity":1,"message":"437","line":15,"column":3,"nodeType":"434","messageId":"435","endLine":15,"endColumn":9},{"ruleId":"432","severity":1,"message":"444","line":23,"column":10,"nodeType":"434","messageId":"435","endLine":23,"endColumn":20},{"ruleId":"432","severity":1,"message":"445","line":24,"column":10,"nodeType":"434","messageId":"435","endLine":24,"endColumn":13},{"ruleId":"432","severity":1,"message":"446","line":27,"column":9,"nodeType":"434","messageId":"435","endLine":27,"endColumn":15},{"ruleId":"432","severity":1,"message":"447","line":28,"column":9,"nodeType":"434","messageId":"435","endLine":28,"endColumn":13},{"ruleId":"438","severity":1,"message":"439","line":116,"column":21,"nodeType":"440","endLine":116,"endColumn":24},"no-native-reassign",["517"],"no-negated-in-lhs",["518"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useChangeUser' is defined but never used.","'User' is defined but never used.","'useCookies' is defined but never used.","'set' is defined but never used.","'Logged' is assigned a value but never used.","'User' is assigned a value but never used.","'useCallback' is defined but never used.","'Cell' is defined but never used.","'isNotEmittedStatement' is defined but never used.","'addUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Objects.length', 'User', 'addObject', and 'connected'. Either include them or remove the dependency array. You can also do a functional update 'setConnected(c => ...)' if you only need 'connected' in the 'setConnected' call.","ArrayExpression",["519"],"React Hook useEffect has missing dependencies: 'judgeCheck', 'judgeGame', and 'judgePromotion'. Either include them or remove the dependency array.",["520"],"React Hook useEffect has a missing dependency: 'take'. Either include it or remove the dependency array. You can also do a functional update 'setTake(t => ...)' if you only need 'take' in the 'setTake' call.",["521"],"React Hook useEffect has a missing dependency: 'changeObject'. Either include it or remove the dependency array.",["522"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'castling'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isNonNullExpression' is defined but never used.","'black' is assigned a value but never used.","'white' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'x' and 'y'. Either include them or remove the dependency array. If 'setObject' needs the current value of 'y', you can also switch to useReducer instead of useState and read 'y' in the reducer.",["523"],["517"],["518"],"'unstable_renderSubtreeIntoContainer' is defined but never used.","'setConstantValue' is defined but never used.","'addUser' is defined but never used.","'queryString' is defined but never used.","'ContextMenu' is defined but never used.","'MenuItem' is defined but never used.","'ContextMenuTrigger' is defined but never used.","React Hook useEffect has a missing dependency: 'readCookie'. Either include it or remove the dependency array.",["524"],"React Hook useEffect has a missing dependency: 'socketio'. Either include it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["525"],"React Hook useEffect has missing dependencies: 'User', 'history', and 'request'. Either include them or remove the dependency array. You can also do a functional update 'setRequest(r => ...)' if you only need 'request' in the 'setRequest' call.",["526"],"'useUser' is defined but never used.","'socket' is defined but never used.","React Hook useEffect has missing dependencies: 'Objects.length' and 'addObject'. Either include them or remove the dependency array.",["527"],"React Hook useEffect has missing dependencies: 'judgeCheck' and 'judgePromotion'. Either include them or remove the dependency array.",["528"],"'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BOARD_SIZE' is assigned a value but never used.","'useHistory' is defined but never used.",["517"],["518"],["529"],["530"],["531"],["532"],["533"],["534"],["535"],["536"],["537"],"no-global-assign","no-unsafe-negation",{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"548","fix":"558"},{"desc":"550","fix":"559"},{"desc":"552","fix":"560"},{"desc":"554","fix":"561"},{"desc":"556","fix":"562"},{"desc":"538","fix":"563"},{"desc":"540","fix":"564"},{"desc":"542","fix":"565"},{"desc":"544","fix":"566"},"Update the dependencies array to be: [ENDPOINT, Objects.length, User, addObject, connected, location.search]",{"range":"567","text":"568"},"Update the dependencies array to be: [judgeCheck, judgeGame, judgePromotion, turn]",{"range":"569","text":"570"},"Update the dependencies array to be: [connected, take]",{"range":"571","text":"572"},"Update the dependencies array to be: [changeObject, move]",{"range":"573","text":"574"},"Update the dependencies array to be: [x, y]",{"range":"575","text":"576"},"Update the dependencies array to be: [readCookie]",{"range":"577","text":"578"},"Update the dependencies array to be: [location.search, User, socketio]",{"range":"579","text":"580"},"Update the dependencies array to be: [User, confirm, history, request]",{"range":"581","text":"582"},"Update the dependencies array to be: [Objects.length, addObject]",{"range":"583","text":"584"},"Update the dependencies array to be: [judgeCheck, judgePromotion, turn]",{"range":"585","text":"586"},{"range":"587","text":"578"},{"range":"588","text":"580"},{"range":"589","text":"582"},{"range":"590","text":"584"},{"range":"591","text":"586"},{"range":"592","text":"568"},{"range":"593","text":"570"},{"range":"594","text":"572"},{"range":"595","text":"574"},[4696,4723],"[ENDPOINT, Objects.length, User, addObject, connected, location.search]",[4849,4855],"[judgeCheck, judgeGame, judgePromotion, turn]",[5066,5077],"[connected, take]",[6680,6686],"[changeObject, move]",[2717,2719],"[x, y]",[1653,1655],"[readCookie]",[2202,2235],"[location.search, User, socketio]",[3781,3790],"[User, confirm, history, request]",[3406,3408],"[Objects.length, addObject]",[3501,3507],"[judgeCheck, judgePromotion, turn]",[1601,1603],[2132,2165],[3647,3656],[3304,3306],[3392,3398],[4558,4585],[4703,4709],[4911,4922],[6471,6477]]